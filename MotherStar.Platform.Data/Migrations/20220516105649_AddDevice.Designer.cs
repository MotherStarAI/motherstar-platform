// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MotherStar.Platform.Data.Migrations
{
    [DbContext(typeof(LighthouseDbContext))]
    [Migration("20220516105649_AddDevice")]
    partial class AddDevice
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MotherStar.Platform.Domain.SEO.Lighthouse.Models.LighthouseProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedByEmail")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("WebsiteUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.ToTable("LighthouseCustomers", (string)null);
                });

            modelBuilder.Entity("MotherStar.Platform.Domain.SEO.Lighthouse.Models.PageAudit", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("AuditReport")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("Device")
                        .HasColumnType("integer");

                    b.Property<Guid>("PageAuditRequestId")
                        .HasColumnType("uuid");

                    b.Property<string>("PageUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<double?>("Score")
                        .HasColumnType("double precision");

                    b.Property<Guid>("StatusId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("PageAuditRequestId");

                    b.HasIndex("StatusId");

                    b.ToTable("PageAudits");
                });

            modelBuilder.Entity("MotherStar.Platform.Domain.SEO.Lighthouse.Models.PageAuditItem", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<int>("AuditCategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("PageAuditId")
                        .HasColumnType("uuid");

                    b.Property<string>("ReferenceId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<Guid>("StatusId")
                        .HasColumnType("uuid");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.HasIndex("PageAuditId");

                    b.HasIndex("StatusId");

                    b.ToTable("PageAuditItems");
                });

            modelBuilder.Entity("MotherStar.Platform.Domain.SEO.Lighthouse.Models.PageAuditRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("LighthouseProfileId")
                        .HasColumnType("uuid")
                        .HasColumnName("LighthouseCustomerId");

                    b.Property<string>("PageUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<Guid>("StatusId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("LighthouseProfileId");

                    b.ToTable("PageAuditRequests");
                });

            modelBuilder.Entity("MotherStar.Platform.Domain.SEO.Lighthouse.Models.Status", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<Guid>("StatusTypeId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("StatusTypeId");

                    b.ToTable("Statuses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c16ca33c-2949-4f88-82f2-36eb24bbf874"),
                            StatusName = "Started",
                            StatusTypeId = new Guid("31bfc614-8575-4cc1-89e5-0b2090d62358")
                        },
                        new
                        {
                            Id = new Guid("c7625069-2055-4669-a0f2-5169b20ebc6e"),
                            StatusName = "Created",
                            StatusTypeId = new Guid("31bfc614-8575-4cc1-89e5-0b2090d62358")
                        },
                        new
                        {
                            Id = new Guid("48a62047-2f22-453c-ab16-590dafa383b1"),
                            StatusName = "Failed",
                            StatusTypeId = new Guid("31bfc614-8575-4cc1-89e5-0b2090d62358")
                        },
                        new
                        {
                            Id = new Guid("cccae8e9-350c-43c5-bf0c-5d0d7fe1409c"),
                            StatusName = "Completed",
                            StatusTypeId = new Guid("31bfc614-8575-4cc1-89e5-0b2090d62358")
                        },
                        new
                        {
                            Id = new Guid("67f8bdc0-04ca-448f-a5b1-46aea7c569c3"),
                            StatusName = "Completed",
                            StatusTypeId = new Guid("c7c12605-f0c5-457f-9b76-3fb03d0527df")
                        },
                        new
                        {
                            Id = new Guid("c8cc655b-0de4-484a-abf2-4e8c659059f4"),
                            StatusName = "Completed",
                            StatusTypeId = new Guid("202b50ff-4e0b-4a4f-8542-6c7641114cb6")
                        });
                });

            modelBuilder.Entity("MotherStar.Platform.Domain.SEO.Lighthouse.Models.StatusType", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("StatusTypeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("StatusTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("31bfc614-8575-4cc1-89e5-0b2090d62358"),
                            StatusTypeName = "Page Audit Requests"
                        },
                        new
                        {
                            Id = new Guid("c7c12605-f0c5-457f-9b76-3fb03d0527df"),
                            StatusTypeName = "Page Audits"
                        },
                        new
                        {
                            Id = new Guid("202b50ff-4e0b-4a4f-8542-6c7641114cb6"),
                            StatusTypeName = "Page Audit Items"
                        });
                });

            modelBuilder.Entity("MotherStar.Platform.Domain.SEO.Lighthouse.Models.PageAudit", b =>
                {
                    b.HasOne("MotherStar.Platform.Domain.SEO.Lighthouse.Models.PageAuditRequest", "PageAuditRequest")
                        .WithMany("PageAudits")
                        .HasForeignKey("PageAuditRequestId")
                        .IsRequired()
                        .HasConstraintName("FK_PageAudits_PageAuditRequests");

                    b.HasOne("MotherStar.Platform.Domain.SEO.Lighthouse.Models.Status", "Status")
                        .WithMany("PageAudits")
                        .HasForeignKey("StatusId")
                        .IsRequired()
                        .HasConstraintName("FK_PageAudits_Statuses");

                    b.Navigation("PageAuditRequest");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("MotherStar.Platform.Domain.SEO.Lighthouse.Models.PageAuditItem", b =>
                {
                    b.HasOne("MotherStar.Platform.Domain.SEO.Lighthouse.Models.PageAudit", "PageAudit")
                        .WithMany("PageAuditItems")
                        .HasForeignKey("PageAuditId")
                        .IsRequired()
                        .HasConstraintName("FK_PageAuditItems_PageAudits");

                    b.HasOne("MotherStar.Platform.Domain.SEO.Lighthouse.Models.Status", "Status")
                        .WithMany("PageAuditItems")
                        .HasForeignKey("StatusId")
                        .IsRequired()
                        .HasConstraintName("FK_PageAuditItems_Statuses");

                    b.Navigation("PageAudit");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("MotherStar.Platform.Domain.SEO.Lighthouse.Models.PageAuditRequest", b =>
                {
                    b.HasOne("MotherStar.Platform.Domain.SEO.Lighthouse.Models.LighthouseProfile", "LighthouseProfile")
                        .WithMany("PageAuditRequests")
                        .HasForeignKey("LighthouseProfileId")
                        .IsRequired()
                        .HasConstraintName("FK_PageAuditRequests_LighthouseCustomers");

                    b.Navigation("LighthouseProfile");
                });

            modelBuilder.Entity("MotherStar.Platform.Domain.SEO.Lighthouse.Models.Status", b =>
                {
                    b.HasOne("MotherStar.Platform.Domain.SEO.Lighthouse.Models.StatusType", "StatusType")
                        .WithMany("Statuses")
                        .HasForeignKey("StatusTypeId")
                        .IsRequired()
                        .HasConstraintName("FK_Statuses_StatusTypes");

                    b.Navigation("StatusType");
                });

            modelBuilder.Entity("MotherStar.Platform.Domain.SEO.Lighthouse.Models.LighthouseProfile", b =>
                {
                    b.Navigation("PageAuditRequests");
                });

            modelBuilder.Entity("MotherStar.Platform.Domain.SEO.Lighthouse.Models.PageAudit", b =>
                {
                    b.Navigation("PageAuditItems");
                });

            modelBuilder.Entity("MotherStar.Platform.Domain.SEO.Lighthouse.Models.PageAuditRequest", b =>
                {
                    b.Navigation("PageAudits");
                });

            modelBuilder.Entity("MotherStar.Platform.Domain.SEO.Lighthouse.Models.Status", b =>
                {
                    b.Navigation("PageAuditItems");

                    b.Navigation("PageAudits");
                });

            modelBuilder.Entity("MotherStar.Platform.Domain.SEO.Lighthouse.Models.StatusType", b =>
                {
                    b.Navigation("Statuses");
                });
#pragma warning restore 612, 618
        }
    }
}
