// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using LeadVenture.SharedServices.Lighthouse.Contracts;
//
//    var lighthouseReport = LighthouseReport.FromJson(jsonString);

namespace LeadVenture.SharedServices.Lighthouse.Contracts
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class LighthouseReport
    {
        [JsonProperty("lighthouseVersion", NullValueHandling = NullValueHandling.Ignore)]
        public string LighthouseVersion { get; set; }

        [JsonProperty("requestedUrl", NullValueHandling = NullValueHandling.Ignore)]
        public Uri RequestedUrl { get; set; }

        [JsonProperty("finalUrl", NullValueHandling = NullValueHandling.Ignore)]
        public Uri FinalUrl { get; set; }

        [JsonProperty("fetchTime", NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeOffset? FetchTime { get; set; }

        [JsonProperty("gatherMode", NullValueHandling = NullValueHandling.Ignore)]
        public string GatherMode { get; set; }

        [JsonProperty("runWarnings", NullValueHandling = NullValueHandling.Ignore)]
        public object[] RunWarnings { get; set; }

        [JsonProperty("userAgent", NullValueHandling = NullValueHandling.Ignore)]
        public string UserAgent { get; set; }

        [JsonProperty("environment", NullValueHandling = NullValueHandling.Ignore)]
        public Environment Environment { get; set; }

        [JsonProperty("audits", NullValueHandling = NullValueHandling.Ignore)]
        public Audits Audits { get; set; }

        [JsonProperty("configSettings", NullValueHandling = NullValueHandling.Ignore)]
        public ConfigSettings ConfigSettings { get; set; }

        [JsonProperty("categories", NullValueHandling = NullValueHandling.Ignore)]
        public Categories Categories { get; set; }

        [JsonProperty("categoryGroups", NullValueHandling = NullValueHandling.Ignore)]
        public CategoryGroups CategoryGroups { get; set; }

        [JsonProperty("stackPacks", NullValueHandling = NullValueHandling.Ignore)]
        public object[] StackPacks { get; set; }

        [JsonProperty("timing", NullValueHandling = NullValueHandling.Ignore)]
        public Timing Timing { get; set; }

        [JsonProperty("i18n", NullValueHandling = NullValueHandling.Ignore)]
        public I18N I18N { get; set; }
    }

    public partial class Audits
    {
        [JsonProperty("is-on-https", NullValueHandling = NullValueHandling.Ignore)]
        public BootupTime IsOnHttps { get; set; }

        [JsonProperty("service-worker", NullValueHandling = NullValueHandling.Ignore)]
        public BootupTime ServiceWorker { get; set; }

        [JsonProperty("viewport", NullValueHandling = NullValueHandling.Ignore)]
        public BootupTime Viewport { get; set; }

        [JsonProperty("first-contentful-paint", NullValueHandling = NullValueHandling.Ignore)]
        public BootupTime FirstContentfulPaint { get; set; }

        [JsonProperty("largest-contentful-paint", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys LargestContentfulPaint { get; set; }

        [JsonProperty("first-meaningful-paint", NullValueHandling = NullValueHandling.Ignore)]
        public BootupTime FirstMeaningfulPaint { get; set; }

        [JsonProperty("speed-index", NullValueHandling = NullValueHandling.Ignore)]
        public BootupTime SpeedIndex { get; set; }

        [JsonProperty("screenshot-thumbnails", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys ScreenshotThumbnails { get; set; }

        [JsonProperty("final-screenshot", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys FinalScreenshot { get; set; }

        [JsonProperty("total-blocking-time", NullValueHandling = NullValueHandling.Ignore)]
        public BootupTime TotalBlockingTime { get; set; }

        [JsonProperty("max-potential-fid", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys MaxPotentialFid { get; set; }

        [JsonProperty("cumulative-layout-shift", NullValueHandling = NullValueHandling.Ignore)]
        public CumulativeLayoutShift CumulativeLayoutShift { get; set; }

        [JsonProperty("errors-in-console", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys ErrorsInConsole { get; set; }

        [JsonProperty("server-response-time", NullValueHandling = NullValueHandling.Ignore)]
        public CriticalRequestChains ServerResponseTime { get; set; }

        [JsonProperty("interactive", NullValueHandling = NullValueHandling.Ignore)]
        public CriticalRequestChains Interactive { get; set; }

        [JsonProperty("user-timings", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys UserTimings { get; set; }

        [JsonProperty("critical-request-chains", NullValueHandling = NullValueHandling.Ignore)]
        public CriticalRequestChains CriticalRequestChains { get; set; }

        [JsonProperty("redirects", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys Redirects { get; set; }

        [JsonProperty("installable-manifest", NullValueHandling = NullValueHandling.Ignore)]
        public BootupTime InstallableManifest { get; set; }

        [JsonProperty("apple-touch-icon", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys AppleTouchIcon { get; set; }

        [JsonProperty("splash-screen", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys SplashScreen { get; set; }

        [JsonProperty("themed-omnibox", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys ThemedOmnibox { get; set; }

        [JsonProperty("maskable-icon", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys MaskableIcon { get; set; }

        [JsonProperty("content-width", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys ContentWidth { get; set; }

        [JsonProperty("image-aspect-ratio", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys ImageAspectRatio { get; set; }

        [JsonProperty("image-size-responsive", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys ImageSizeResponsive { get; set; }

        [JsonProperty("preload-fonts", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys PreloadFonts { get; set; }

        [JsonProperty("deprecations", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys Deprecations { get; set; }

        [JsonProperty("mainthread-work-breakdown", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys MainthreadWorkBreakdown { get; set; }

        [JsonProperty("bootup-time", NullValueHandling = NullValueHandling.Ignore)]
        public BootupTime BootupTime { get; set; }

        [JsonProperty("uses-rel-preload", NullValueHandling = NullValueHandling.Ignore)]
        public BootupTime UsesRelPreload { get; set; }

        [JsonProperty("uses-rel-preconnect", NullValueHandling = NullValueHandling.Ignore)]
        public CriticalRequestChains UsesRelPreconnect { get; set; }

        [JsonProperty("font-display", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys FontDisplay { get; set; }

        [JsonProperty("diagnostics", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys Diagnostics { get; set; }

        [JsonProperty("network-requests", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys NetworkRequests { get; set; }

        [JsonProperty("network-rtt", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys NetworkRtt { get; set; }

        [JsonProperty("network-server-latency", NullValueHandling = NullValueHandling.Ignore)]
        public BootupTime NetworkServerLatency { get; set; }

        [JsonProperty("main-thread-tasks", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys MainThreadTasks { get; set; }

        [JsonProperty("metrics", NullValueHandling = NullValueHandling.Ignore)]
        public CriticalRequestChains Metrics { get; set; }

        [JsonProperty("performance-budget", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys PerformanceBudget { get; set; }

        [JsonProperty("timing-budget", NullValueHandling = NullValueHandling.Ignore)]
        public BootupTime TimingBudget { get; set; }

        [JsonProperty("resource-summary", NullValueHandling = NullValueHandling.Ignore)]
        public CriticalRequestChains ResourceSummary { get; set; }

        [JsonProperty("third-party-summary", NullValueHandling = NullValueHandling.Ignore)]
        public BootupTime ThirdPartySummary { get; set; }

        [JsonProperty("third-party-facades", NullValueHandling = NullValueHandling.Ignore)]
        public BootupTime ThirdPartyFacades { get; set; }

        [JsonProperty("largest-contentful-paint-element", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys LargestContentfulPaintElement { get; set; }

        [JsonProperty("lcp-lazy-loaded", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys LcpLazyLoaded { get; set; }

        [JsonProperty("layout-shift-elements", NullValueHandling = NullValueHandling.Ignore)]
        public BootupTime LayoutShiftElements { get; set; }

        [JsonProperty("long-tasks", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys LongTasks { get; set; }

        [JsonProperty("no-unload-listeners", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys NoUnloadListeners { get; set; }

        [JsonProperty("non-composited-animations", NullValueHandling = NullValueHandling.Ignore)]
        public BootupTime NonCompositedAnimations { get; set; }

        [JsonProperty("unsized-images", NullValueHandling = NullValueHandling.Ignore)]
        public BootupTime UnsizedImages { get; set; }

        [JsonProperty("valid-source-maps", NullValueHandling = NullValueHandling.Ignore)]
        public BootupTime ValidSourceMaps { get; set; }

        [JsonProperty("preload-lcp-image", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys PreloadLcpImage { get; set; }

        [JsonProperty("csp-xss", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys CspXss { get; set; }

        [JsonProperty("full-page-screenshot", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys FullPageScreenshot { get; set; }

        [JsonProperty("script-treemap-data", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys ScriptTreemapData { get; set; }

        [JsonProperty("pwa-cross-browser", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys PwaCrossBrowser { get; set; }

        [JsonProperty("pwa-page-transitions", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys PwaPageTransitions { get; set; }

        [JsonProperty("pwa-each-page-has-url", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys PwaEachPageHasUrl { get; set; }

        [JsonProperty("accesskeys", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys Accesskeys { get; set; }

        [JsonProperty("aria-allowed-attr", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys AriaAllowedAttr { get; set; }

        [JsonProperty("aria-command-name", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys AriaCommandName { get; set; }

        [JsonProperty("aria-hidden-body", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys AriaHiddenBody { get; set; }

        [JsonProperty("aria-hidden-focus", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys AriaHiddenFocus { get; set; }

        [JsonProperty("aria-input-field-name", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys AriaInputFieldName { get; set; }

        [JsonProperty("aria-meter-name", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys AriaMeterName { get; set; }

        [JsonProperty("aria-progressbar-name", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys AriaProgressbarName { get; set; }

        [JsonProperty("aria-required-attr", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys AriaRequiredAttr { get; set; }

        [JsonProperty("aria-required-children", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys AriaRequiredChildren { get; set; }

        [JsonProperty("aria-required-parent", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys AriaRequiredParent { get; set; }

        [JsonProperty("aria-roles", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys AriaRoles { get; set; }

        [JsonProperty("aria-toggle-field-name", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys AriaToggleFieldName { get; set; }

        [JsonProperty("aria-tooltip-name", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys AriaTooltipName { get; set; }

        [JsonProperty("aria-treeitem-name", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys AriaTreeitemName { get; set; }

        [JsonProperty("aria-valid-attr-value", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys AriaValidAttrValue { get; set; }

        [JsonProperty("aria-valid-attr", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys AriaValidAttr { get; set; }

        [JsonProperty("button-name", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys ButtonName { get; set; }

        [JsonProperty("bypass", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys Bypass { get; set; }

        [JsonProperty("color-contrast", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys ColorContrast { get; set; }

        [JsonProperty("definition-list", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys DefinitionList { get; set; }

        [JsonProperty("dlitem", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys Dlitem { get; set; }

        [JsonProperty("document-title", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys DocumentTitle { get; set; }

        [JsonProperty("duplicate-id-active", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys DuplicateIdActive { get; set; }

        [JsonProperty("duplicate-id-aria", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys DuplicateIdAria { get; set; }

        [JsonProperty("form-field-multiple-labels", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys FormFieldMultipleLabels { get; set; }

        [JsonProperty("frame-title", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys FrameTitle { get; set; }

        [JsonProperty("heading-order", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys HeadingOrder { get; set; }

        [JsonProperty("html-has-lang", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys HtmlHasLang { get; set; }

        [JsonProperty("html-lang-valid", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys HtmlLangValid { get; set; }

        [JsonProperty("image-alt", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys ImageAlt { get; set; }

        [JsonProperty("input-image-alt", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys InputImageAlt { get; set; }

        [JsonProperty("label", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys Label { get; set; }

        [JsonProperty("link-name", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys LinkName { get; set; }

        [JsonProperty("list", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys List { get; set; }

        [JsonProperty("listitem", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys Listitem { get; set; }

        [JsonProperty("meta-refresh", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys MetaRefresh { get; set; }

        [JsonProperty("meta-viewport", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys MetaViewport { get; set; }

        [JsonProperty("object-alt", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys ObjectAlt { get; set; }

        [JsonProperty("tabindex", NullValueHandling = NullValueHandling.Ignore)]
        public BootupTime Tabindex { get; set; }

        [JsonProperty("td-headers-attr", NullValueHandling = NullValueHandling.Ignore)]
        public BootupTime TdHeadersAttr { get; set; }

        [JsonProperty("th-has-data-cells", NullValueHandling = NullValueHandling.Ignore)]
        public BootupTime ThHasDataCells { get; set; }

        [JsonProperty("valid-lang", NullValueHandling = NullValueHandling.Ignore)]
        public BootupTime ValidLang { get; set; }

        [JsonProperty("video-caption", NullValueHandling = NullValueHandling.Ignore)]
        public BootupTime VideoCaption { get; set; }

        [JsonProperty("custom-controls-labels", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys CustomControlsLabels { get; set; }

        [JsonProperty("custom-controls-roles", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys CustomControlsRoles { get; set; }

        [JsonProperty("focus-traps", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys FocusTraps { get; set; }

        [JsonProperty("focusable-controls", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys FocusableControls { get; set; }

        [JsonProperty("interactive-element-affordance", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys InteractiveElementAffordance { get; set; }

        [JsonProperty("logical-tab-order", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys LogicalTabOrder { get; set; }

        [JsonProperty("managed-focus", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys ManagedFocus { get; set; }

        [JsonProperty("offscreen-content-hidden", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys OffscreenContentHidden { get; set; }

        [JsonProperty("use-landmarks", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys UseLandmarks { get; set; }

        [JsonProperty("visual-order-follows-dom", NullValueHandling = NullValueHandling.Ignore)]
        public BootupTime VisualOrderFollowsDom { get; set; }

        [JsonProperty("uses-long-cache-ttl", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys UsesLongCacheTtl { get; set; }

        [JsonProperty("total-byte-weight", NullValueHandling = NullValueHandling.Ignore)]
        public BootupTime TotalByteWeight { get; set; }

        [JsonProperty("offscreen-images", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys OffscreenImages { get; set; }

        [JsonProperty("render-blocking-resources", NullValueHandling = NullValueHandling.Ignore)]
        public CriticalRequestChains RenderBlockingResources { get; set; }

        [JsonProperty("unminified-css", NullValueHandling = NullValueHandling.Ignore)]
        public DuplicatedJavascript UnminifiedCss { get; set; }

        [JsonProperty("unminified-javascript", NullValueHandling = NullValueHandling.Ignore)]
        public CriticalRequestChains UnminifiedJavascript { get; set; }

        [JsonProperty("unused-css-rules", NullValueHandling = NullValueHandling.Ignore)]
        public BootupTime UnusedCssRules { get; set; }

        [JsonProperty("unused-javascript", NullValueHandling = NullValueHandling.Ignore)]
        public DuplicatedJavascript UnusedJavascript { get; set; }

        [JsonProperty("modern-image-formats", NullValueHandling = NullValueHandling.Ignore)]
        public DuplicatedJavascript ModernImageFormats { get; set; }

        [JsonProperty("uses-optimized-images", NullValueHandling = NullValueHandling.Ignore)]
        public DuplicatedJavascript UsesOptimizedImages { get; set; }

        [JsonProperty("uses-text-compression", NullValueHandling = NullValueHandling.Ignore)]
        public BootupTime UsesTextCompression { get; set; }

        [JsonProperty("uses-responsive-images", NullValueHandling = NullValueHandling.Ignore)]
        public BootupTime UsesResponsiveImages { get; set; }

        [JsonProperty("efficient-animated-content", NullValueHandling = NullValueHandling.Ignore)]
        public DuplicatedJavascript EfficientAnimatedContent { get; set; }

        [JsonProperty("duplicated-javascript", NullValueHandling = NullValueHandling.Ignore)]
        public DuplicatedJavascript DuplicatedJavascript { get; set; }

        [JsonProperty("legacy-javascript", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys LegacyJavascript { get; set; }

        [JsonProperty("doctype", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys Doctype { get; set; }

        [JsonProperty("charset", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys Charset { get; set; }

        [JsonProperty("dom-size", NullValueHandling = NullValueHandling.Ignore)]
        public DomSize DomSize { get; set; }

        [JsonProperty("geolocation-on-start", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys GeolocationOnStart { get; set; }

        [JsonProperty("inspector-issues", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys InspectorIssues { get; set; }

        [JsonProperty("no-document-write", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys NoDocumentWrite { get; set; }

        [JsonProperty("no-vulnerable-libraries", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys NoVulnerableLibraries { get; set; }

        [JsonProperty("js-libraries", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys JsLibraries { get; set; }

        [JsonProperty("notification-on-start", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys NotificationOnStart { get; set; }

        [JsonProperty("password-inputs-can-be-pasted-into", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys PasswordInputsCanBePastedInto { get; set; }

        [JsonProperty("uses-http2", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys UsesHttp2 { get; set; }

        [JsonProperty("uses-passive-event-listeners", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys UsesPassiveEventListeners { get; set; }

        [JsonProperty("meta-description", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys MetaDescription { get; set; }

        [JsonProperty("http-status-code", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys HttpStatusCode { get; set; }

        [JsonProperty("font-size", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys FontSize { get; set; }

        [JsonProperty("link-text", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys LinkText { get; set; }

        [JsonProperty("crawlable-anchors", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys CrawlableAnchors { get; set; }

        [JsonProperty("is-crawlable", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys IsCrawlable { get; set; }

        [JsonProperty("robots-txt", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys RobotsTxt { get; set; }

        [JsonProperty("tap-targets", NullValueHandling = NullValueHandling.Ignore)]
        public BootupTime TapTargets { get; set; }

        [JsonProperty("hreflang", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys Hreflang { get; set; }

        [JsonProperty("plugins", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys Plugins { get; set; }

        [JsonProperty("canonical", NullValueHandling = NullValueHandling.Ignore)]
        public Accesskeys Canonical { get; set; }

        [JsonProperty("structured-data", NullValueHandling = NullValueHandling.Ignore)]
        public BootupTime StructuredData { get; set; }
    }

    public partial class Accesskeys
    {
        [JsonProperty("id", NullValueHandling = NullValueHandling.Ignore)]
        public string Id { get; set; }

        [JsonProperty("title", NullValueHandling = NullValueHandling.Ignore)]
        public string Title { get; set; }

        [JsonProperty("description", NullValueHandling = NullValueHandling.Ignore)]
        public string Description { get; set; }

        [JsonProperty("score")]
        public double? Score { get; set; }

        [JsonProperty("scoreDisplayMode", NullValueHandling = NullValueHandling.Ignore)]
        public AccesskeysScoreDisplayMode? ScoreDisplayMode { get; set; }

        [JsonProperty("warnings", NullValueHandling = NullValueHandling.Ignore)]
        public object[] Warnings { get; set; }

        [JsonProperty("details", NullValueHandling = NullValueHandling.Ignore)]
        public AccesskeysDetails Details { get; set; }

        [JsonProperty("displayValue", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayValue { get; set; }

        [JsonProperty("numericValue", NullValueHandling = NullValueHandling.Ignore)]
        public double? NumericValue { get; set; }

        [JsonProperty("numericUnit", NullValueHandling = NullValueHandling.Ignore)]
        public NumericUnit? NumericUnit { get; set; }

        [JsonProperty("explanation", NullValueHandling = NullValueHandling.Ignore)]
        public string Explanation { get; set; }
    }

    public partial class AccesskeysDetails
    {
        [JsonProperty("type", NullValueHandling = NullValueHandling.Ignore)]
        public TypeEnum? Type { get; set; }

        [JsonProperty("headings", NullValueHandling = NullValueHandling.Ignore)]
        public PurpleHeading[] Headings { get; set; }

        [JsonProperty("items", NullValueHandling = NullValueHandling.Ignore)]
        public PurpleItem[] Items { get; set; }

        [JsonProperty("debugData", NullValueHandling = NullValueHandling.Ignore)]
        public PurpleDebugData DebugData { get; set; }

        [JsonProperty("timing", NullValueHandling = NullValueHandling.Ignore)]
        public long? Timing { get; set; }

        [JsonProperty("timestamp", NullValueHandling = NullValueHandling.Ignore)]
        public long? Timestamp { get; set; }

        [JsonProperty("data", NullValueHandling = NullValueHandling.Ignore)]
        public string Data { get; set; }

        [JsonProperty("screenshot", NullValueHandling = NullValueHandling.Ignore)]
        public Screenshot Screenshot { get; set; }

        [JsonProperty("nodes", NullValueHandling = NullValueHandling.Ignore)]
        public Nodes? Nodes { get; set; }

        [JsonProperty("summary", NullValueHandling = NullValueHandling.Ignore)]
        public ValuesClass Summary { get; set; }

        [JsonProperty("overallSavingsMs", NullValueHandling = NullValueHandling.Ignore)]
        public long? OverallSavingsMs { get; set; }

        [JsonProperty("overallSavingsBytes", NullValueHandling = NullValueHandling.Ignore)]
        public long? OverallSavingsBytes { get; set; }

        [JsonProperty("scale", NullValueHandling = NullValueHandling.Ignore)]
        public long? Scale { get; set; }
    }

    public partial class PurpleDebugData
    {
        [JsonProperty("type", NullValueHandling = NullValueHandling.Ignore)]
        public TypeEnum? Type { get; set; }

        [JsonProperty("impact", NullValueHandling = NullValueHandling.Ignore)]
        public string Impact { get; set; }

        [JsonProperty("tags", NullValueHandling = NullValueHandling.Ignore)]
        public string[] Tags { get; set; }

        [JsonProperty("stacks", NullValueHandling = NullValueHandling.Ignore)]
        public Stack[] Stacks { get; set; }
    }

    public partial class Stack
    {
        [JsonProperty("id", NullValueHandling = NullValueHandling.Ignore)]
        public string Id { get; set; }

        [JsonProperty("version", NullValueHandling = NullValueHandling.Ignore)]
        public string Version { get; set; }
    }

    public partial class PurpleHeading
    {
        [JsonProperty("key", NullValueHandling = NullValueHandling.Ignore)]
        public string Key { get; set; }

        [JsonProperty("itemType", NullValueHandling = NullValueHandling.Ignore)]
        public ScoreDisplayMode? ItemType { get; set; }

        [JsonProperty("subItemsHeading", NullValueHandling = NullValueHandling.Ignore)]
        public PurpleSubItemsHeading SubItemsHeading { get; set; }

        [JsonProperty("text", NullValueHandling = NullValueHandling.Ignore)]
        public string Text { get; set; }

        [JsonProperty("granularity", NullValueHandling = NullValueHandling.Ignore)]
        public WastedBytes? Granularity { get; set; }

        [JsonProperty("displayUnit", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayUnit { get; set; }

        [JsonProperty("valueType", NullValueHandling = NullValueHandling.Ignore)]
        public ScoreDisplayMode? ValueType { get; set; }

        [JsonProperty("label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }
    }

    public partial class PurpleSubItemsHeading
    {
        [JsonProperty("key", NullValueHandling = NullValueHandling.Ignore)]
        public string Key { get; set; }

        [JsonProperty("itemType", NullValueHandling = NullValueHandling.Ignore)]
        public ScoreDisplayMode? ItemType { get; set; }
    }

    public partial class PurpleItem
    {
        [JsonProperty("node", NullValueHandling = NullValueHandling.Ignore)]
        public RelatedNodeClass Node { get; set; }

        [JsonProperty("subItems", NullValueHandling = NullValueHandling.Ignore)]
        public PurpleSubItems SubItems { get; set; }

        [JsonProperty("severity", NullValueHandling = NullValueHandling.Ignore)]
        public string Severity { get; set; }

        [JsonProperty("description", NullValueHandling = NullValueHandling.Ignore)]
        public string Description { get; set; }

        [JsonProperty("numRequests", NullValueHandling = NullValueHandling.Ignore)]
        public long? NumRequests { get; set; }

        [JsonProperty("numScripts", NullValueHandling = NullValueHandling.Ignore)]
        public long? NumScripts { get; set; }

        [JsonProperty("numStylesheets", NullValueHandling = NullValueHandling.Ignore)]
        public long? NumStylesheets { get; set; }

        [JsonProperty("numFonts", NullValueHandling = NullValueHandling.Ignore)]
        public long? NumFonts { get; set; }

        [JsonProperty("numTasks", NullValueHandling = NullValueHandling.Ignore)]
        public long? NumTasks { get; set; }

        [JsonProperty("numTasksOver10ms", NullValueHandling = NullValueHandling.Ignore)]
        public long? NumTasksOver10Ms { get; set; }

        [JsonProperty("numTasksOver25ms", NullValueHandling = NullValueHandling.Ignore)]
        public long? NumTasksOver25Ms { get; set; }

        [JsonProperty("numTasksOver50ms", NullValueHandling = NullValueHandling.Ignore)]
        public long? NumTasksOver50Ms { get; set; }

        [JsonProperty("numTasksOver100ms", NullValueHandling = NullValueHandling.Ignore)]
        public long? NumTasksOver100Ms { get; set; }

        [JsonProperty("numTasksOver500ms", NullValueHandling = NullValueHandling.Ignore)]
        public long? NumTasksOver500Ms { get; set; }

        [JsonProperty("rtt", NullValueHandling = NullValueHandling.Ignore)]
        public double? Rtt { get; set; }

        [JsonProperty("throughput", NullValueHandling = NullValueHandling.Ignore)]
        public double? Throughput { get; set; }

        [JsonProperty("maxRtt", NullValueHandling = NullValueHandling.Ignore)]
        public double? MaxRtt { get; set; }

        [JsonProperty("maxServerLatency", NullValueHandling = NullValueHandling.Ignore)]
        public double? MaxServerLatency { get; set; }

        [JsonProperty("totalByteWeight", NullValueHandling = NullValueHandling.Ignore)]
        public long? TotalByteWeight { get; set; }

        [JsonProperty("totalTaskTime", NullValueHandling = NullValueHandling.Ignore)]
        public double? TotalTaskTime { get; set; }

        [JsonProperty("mainDocumentTransferSize", NullValueHandling = NullValueHandling.Ignore)]
        public long? MainDocumentTransferSize { get; set; }

        [JsonProperty("url", NullValueHandling = NullValueHandling.Ignore)]
        public string Url { get; set; }

        [JsonProperty("wastedMs", NullValueHandling = NullValueHandling.Ignore)]
        public double? WastedMs { get; set; }

        [JsonProperty("source", NullValueHandling = NullValueHandling.Ignore)]
        public Source Source { get; set; }

        [JsonProperty("selector", NullValueHandling = NullValueHandling.Ignore)]
        public string Selector { get; set; }

        [JsonProperty("coverage", NullValueHandling = NullValueHandling.Ignore)]
        public string Coverage { get; set; }

        [JsonProperty("fontSize", NullValueHandling = NullValueHandling.Ignore)]
        public string FontSize { get; set; }

        [JsonProperty("displayedAspectRatio", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayedAspectRatio { get; set; }

        [JsonProperty("actualAspectRatio", NullValueHandling = NullValueHandling.Ignore)]
        public string ActualAspectRatio { get; set; }

        [JsonProperty("doRatiosMatch", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DoRatiosMatch { get; set; }

        [JsonProperty("name", NullValueHandling = NullValueHandling.Ignore)]
        public string Name { get; set; }

        [JsonProperty("version", NullValueHandling = NullValueHandling.Ignore)]
        public string Version { get; set; }

        [JsonProperty("npm", NullValueHandling = NullValueHandling.Ignore)]
        public string Npm { get; set; }

        [JsonProperty("duration", NullValueHandling = NullValueHandling.Ignore)]
        public double? Duration { get; set; }

        [JsonProperty("startTime", NullValueHandling = NullValueHandling.Ignore)]
        public double? StartTime { get; set; }

        [JsonProperty("group", NullValueHandling = NullValueHandling.Ignore)]
        public string Group { get; set; }

        [JsonProperty("groupLabel", NullValueHandling = NullValueHandling.Ignore)]
        public string GroupLabel { get; set; }

        [JsonProperty("protocol", NullValueHandling = NullValueHandling.Ignore)]
        public Protocol? Protocol { get; set; }

        [JsonProperty("endTime", NullValueHandling = NullValueHandling.Ignore)]
        public double? EndTime { get; set; }

        [JsonProperty("finished", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Finished { get; set; }

        [JsonProperty("transferSize", NullValueHandling = NullValueHandling.Ignore)]
        public long? TransferSize { get; set; }

        [JsonProperty("resourceSize", NullValueHandling = NullValueHandling.Ignore)]
        public long? ResourceSize { get; set; }

        [JsonProperty("statusCode", NullValueHandling = NullValueHandling.Ignore)]
        public long? StatusCode { get; set; }

        [JsonProperty("mimeType", NullValueHandling = NullValueHandling.Ignore)]
        public string MimeType { get; set; }

        [JsonProperty("resourceType", NullValueHandling = NullValueHandling.Ignore)]
        public string ResourceType { get; set; }

        [JsonProperty("origin", NullValueHandling = NullValueHandling.Ignore)]
        public Uri Origin { get; set; }

        [JsonProperty("highestSeverity", NullValueHandling = NullValueHandling.Ignore)]
        public string HighestSeverity { get; set; }

        [JsonProperty("vulnCount", NullValueHandling = NullValueHandling.Ignore)]
        public long? VulnCount { get; set; }

        [JsonProperty("detectedLib", NullValueHandling = NullValueHandling.Ignore)]
        public DetectedLib DetectedLib { get; set; }

        [JsonProperty("timing", NullValueHandling = NullValueHandling.Ignore)]
        public long? Timing { get; set; }

        [JsonProperty("timestamp", NullValueHandling = NullValueHandling.Ignore)]
        public long? Timestamp { get; set; }

        [JsonProperty("data", NullValueHandling = NullValueHandling.Ignore)]
        public string Data { get; set; }

        [JsonProperty("failures", NullValueHandling = NullValueHandling.Ignore)]
        public string[] Failures { get; set; }

        [JsonProperty("isParseFailure", NullValueHandling = NullValueHandling.Ignore)]
        public bool? IsParseFailure { get; set; }

        [JsonProperty("parseFailureReason", NullValueHandling = NullValueHandling.Ignore)]
        public string ParseFailureReason { get; set; }

        [JsonProperty("themeColor")]
        public object ThemeColor { get; set; }

        [JsonProperty("debugData", NullValueHandling = NullValueHandling.Ignore)]
        public ItemDebugData DebugData { get; set; }

        [JsonProperty("cacheLifetimeMs", NullValueHandling = NullValueHandling.Ignore)]
        public long? CacheLifetimeMs { get; set; }

        [JsonProperty("cacheHitProbability", NullValueHandling = NullValueHandling.Ignore)]
        public double? CacheHitProbability { get; set; }

        [JsonProperty("totalBytes", NullValueHandling = NullValueHandling.Ignore)]
        public long? TotalBytes { get; set; }

        [JsonProperty("wastedBytes", NullValueHandling = NullValueHandling.Ignore)]
        public double? WastedBytes { get; set; }
    }

    public partial class ItemDebugData
    {
        [JsonProperty("type", NullValueHandling = NullValueHandling.Ignore)]
        public TypeEnum? Type { get; set; }

        [JsonProperty("public", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Public { get; set; }

        [JsonProperty("max-age", NullValueHandling = NullValueHandling.Ignore)]
        public long? MaxAge { get; set; }
    }

    public partial class DetectedLib
    {
        [JsonProperty("text", NullValueHandling = NullValueHandling.Ignore)]
        public string Text { get; set; }

        [JsonProperty("url", NullValueHandling = NullValueHandling.Ignore)]
        public Uri Url { get; set; }

        [JsonProperty("type", NullValueHandling = NullValueHandling.Ignore)]
        public ScoreDisplayMode? Type { get; set; }
    }

    public partial class RelatedNodeClass
    {
        [JsonProperty("type", NullValueHandling = NullValueHandling.Ignore)]
        public ScoreDisplayMode? Type { get; set; }

        [JsonProperty("lhId", NullValueHandling = NullValueHandling.Ignore)]
        public string LhId { get; set; }

        [JsonProperty("path", NullValueHandling = NullValueHandling.Ignore)]
        public string Path { get; set; }

        [JsonProperty("selector", NullValueHandling = NullValueHandling.Ignore)]
        public string Selector { get; set; }

        [JsonProperty("boundingRect", NullValueHandling = NullValueHandling.Ignore)]
        public NodeValue BoundingRect { get; set; }

        [JsonProperty("snippet", NullValueHandling = NullValueHandling.Ignore)]
        public string Snippet { get; set; }

        [JsonProperty("nodeLabel", NullValueHandling = NullValueHandling.Ignore)]
        public string NodeLabel { get; set; }

        [JsonProperty("explanation", NullValueHandling = NullValueHandling.Ignore)]
        public string Explanation { get; set; }
    }

    public partial class NodeValue
    {
        [JsonProperty("top", NullValueHandling = NullValueHandling.Ignore)]
        public long? Top { get; set; }

        [JsonProperty("bottom", NullValueHandling = NullValueHandling.Ignore)]
        public long? Bottom { get; set; }

        [JsonProperty("left", NullValueHandling = NullValueHandling.Ignore)]
        public long? Left { get; set; }

        [JsonProperty("right", NullValueHandling = NullValueHandling.Ignore)]
        public long? Right { get; set; }

        [JsonProperty("width", NullValueHandling = NullValueHandling.Ignore)]
        public long? Width { get; set; }

        [JsonProperty("height", NullValueHandling = NullValueHandling.Ignore)]
        public long? Height { get; set; }
    }

    public partial class Source
    {
        [JsonProperty("type", NullValueHandling = NullValueHandling.Ignore)]
        public ScoreDisplayMode? Type { get; set; }

        [JsonProperty("url", NullValueHandling = NullValueHandling.Ignore)]
        public Uri Url { get; set; }

        [JsonProperty("urlProvider", NullValueHandling = NullValueHandling.Ignore)]
        public string UrlProvider { get; set; }

        [JsonProperty("line", NullValueHandling = NullValueHandling.Ignore)]
        public long? Line { get; set; }

        [JsonProperty("column", NullValueHandling = NullValueHandling.Ignore)]
        public long? Column { get; set; }

        [JsonProperty("value", NullValueHandling = NullValueHandling.Ignore)]
        public string Value { get; set; }
    }

    public partial class PurpleSubItems
    {
        [JsonProperty("type", NullValueHandling = NullValueHandling.Ignore)]
        public string Type { get; set; }

        [JsonProperty("items", NullValueHandling = NullValueHandling.Ignore)]
        public FluffyItem[] Items { get; set; }
    }

    public partial class FluffyItem
    {
        [JsonProperty("relatedNode", NullValueHandling = NullValueHandling.Ignore)]
        public RelatedNodeClass RelatedNode { get; set; }
    }

    public partial class NodeElement
    {
        [JsonProperty("name", NullValueHandling = NullValueHandling.Ignore)]
        public Uri Name { get; set; }

        [JsonProperty("resourceBytes", NullValueHandling = NullValueHandling.Ignore)]
        public long? ResourceBytes { get; set; }

        [JsonProperty("unusedBytes", NullValueHandling = NullValueHandling.Ignore)]
        public long? UnusedBytes { get; set; }
    }

    public partial class Screenshot
    {
        [JsonProperty("data", NullValueHandling = NullValueHandling.Ignore)]
        public string Data { get; set; }

        [JsonProperty("width", NullValueHandling = NullValueHandling.Ignore)]
        public long? Width { get; set; }

        [JsonProperty("height", NullValueHandling = NullValueHandling.Ignore)]
        public long? Height { get; set; }
    }

    public partial class ValuesClass
    {
        [JsonProperty("wastedBytes", NullValueHandling = NullValueHandling.Ignore)]
        public double? WastedBytes { get; set; }
    }

    public partial class BootupTime
    {
        [JsonProperty("id", NullValueHandling = NullValueHandling.Ignore)]
        public string Id { get; set; }

        [JsonProperty("title", NullValueHandling = NullValueHandling.Ignore)]
        public string Title { get; set; }

        [JsonProperty("description", NullValueHandling = NullValueHandling.Ignore)]
        public string Description { get; set; }

        [JsonProperty("score")]
        public double? Score { get; set; }

        [JsonProperty("scoreDisplayMode", NullValueHandling = NullValueHandling.Ignore)]
        public AccesskeysScoreDisplayMode? ScoreDisplayMode { get; set; }

        [JsonProperty("numericValue", NullValueHandling = NullValueHandling.Ignore)]
        public double? NumericValue { get; set; }

        [JsonProperty("numericUnit", NullValueHandling = NullValueHandling.Ignore)]
        public NumericUnit? NumericUnit { get; set; }

        [JsonProperty("displayValue", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayValue { get; set; }

        [JsonProperty("details", NullValueHandling = NullValueHandling.Ignore)]
        public BootupTimeDetails Details { get; set; }

        [JsonProperty("warnings", NullValueHandling = NullValueHandling.Ignore)]
        public object[] Warnings { get; set; }
    }

    public partial class BootupTimeDetails
    {
        [JsonProperty("type", NullValueHandling = NullValueHandling.Ignore)]
        public TypeEnum? Type { get; set; }

        [JsonProperty("headings", NullValueHandling = NullValueHandling.Ignore)]
        public FluffyHeading[] Headings { get; set; }

        [JsonProperty("items", NullValueHandling = NullValueHandling.Ignore)]
        public TentacledItem[] Items { get; set; }

        [JsonProperty("summary", NullValueHandling = NullValueHandling.Ignore)]
        public PurpleSummary Summary { get; set; }

        [JsonProperty("debugData", NullValueHandling = NullValueHandling.Ignore)]
        public FluffyDebugData DebugData { get; set; }

        [JsonProperty("overallSavingsMs", NullValueHandling = NullValueHandling.Ignore)]
        public long? OverallSavingsMs { get; set; }

        [JsonProperty("overallSavingsBytes", NullValueHandling = NullValueHandling.Ignore)]
        public long? OverallSavingsBytes { get; set; }
    }

    public partial class FluffyDebugData
    {
        [JsonProperty("type", NullValueHandling = NullValueHandling.Ignore)]
        public TypeEnum? Type { get; set; }

        [JsonProperty("manifestUrl")]
        public object ManifestUrl { get; set; }
    }

    public partial class FluffyHeading
    {
        [JsonProperty("key", NullValueHandling = NullValueHandling.Ignore)]
        public string Key { get; set; }

        [JsonProperty("itemType", NullValueHandling = NullValueHandling.Ignore)]
        public ScoreDisplayMode? ItemType { get; set; }

        [JsonProperty("text", NullValueHandling = NullValueHandling.Ignore)]
        public string Text { get; set; }

        [JsonProperty("granularity", NullValueHandling = NullValueHandling.Ignore)]
        public double? Granularity { get; set; }

        [JsonProperty("subItemsHeading", NullValueHandling = NullValueHandling.Ignore)]
        public PurpleSubItemsHeading SubItemsHeading { get; set; }

        [JsonProperty("valueType", NullValueHandling = NullValueHandling.Ignore)]
        public ScoreDisplayMode? ValueType { get; set; }

        [JsonProperty("label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }
    }

    public partial class TentacledItem
    {
        [JsonProperty("url", NullValueHandling = NullValueHandling.Ignore)]
        public string Url { get; set; }

        [JsonProperty("total", NullValueHandling = NullValueHandling.Ignore)]
        public double? Total { get; set; }

        [JsonProperty("scripting", NullValueHandling = NullValueHandling.Ignore)]
        public double? Scripting { get; set; }

        [JsonProperty("scriptParseCompile", NullValueHandling = NullValueHandling.Ignore)]
        public double? ScriptParseCompile { get; set; }

        [JsonProperty("reason", NullValueHandling = NullValueHandling.Ignore)]
        public string Reason { get; set; }

        [JsonProperty("resolution", NullValueHandling = NullValueHandling.Ignore)]
        public Resolution? Resolution { get; set; }

        [JsonProperty("node", NullValueHandling = NullValueHandling.Ignore)]
        public RelatedNodeClass Node { get; set; }

        [JsonProperty("score", NullValueHandling = NullValueHandling.Ignore)]
        public double? Score { get; set; }

        [JsonProperty("origin", NullValueHandling = NullValueHandling.Ignore)]
        public Uri Origin { get; set; }

        [JsonProperty("serverResponseTime", NullValueHandling = NullValueHandling.Ignore)]
        public double? ServerResponseTime { get; set; }

        [JsonProperty("mainThreadTime", NullValueHandling = NullValueHandling.Ignore)]
        public double? MainThreadTime { get; set; }

        [JsonProperty("blockingTime", NullValueHandling = NullValueHandling.Ignore)]
        public long? BlockingTime { get; set; }

        [JsonProperty("transferSize", NullValueHandling = NullValueHandling.Ignore)]
        public long? TransferSize { get; set; }

        [JsonProperty("entity", NullValueHandling = NullValueHandling.Ignore)]
        public DetectedLib Entity { get; set; }

        [JsonProperty("subItems", NullValueHandling = NullValueHandling.Ignore)]
        public FluffySubItems SubItems { get; set; }

        [JsonProperty("totalBytes", NullValueHandling = NullValueHandling.Ignore)]
        public long? TotalBytes { get; set; }

        [JsonProperty("wastedBytes", NullValueHandling = NullValueHandling.Ignore)]
        public long? WastedBytes { get; set; }

        [JsonProperty("wastedPercent", NullValueHandling = NullValueHandling.Ignore)]
        public double? WastedPercent { get; set; }
    }

    public partial class FluffySubItems
    {
        [JsonProperty("type", NullValueHandling = NullValueHandling.Ignore)]
        public string Type { get; set; }

        [JsonProperty("items", NullValueHandling = NullValueHandling.Ignore)]
        public StickyItem[] Items { get; set; }
    }

    public partial class StickyItem
    {
        [JsonProperty("url", NullValueHandling = NullValueHandling.Ignore)]
        public Uri Url { get; set; }

        [JsonProperty("mainThreadTime", NullValueHandling = NullValueHandling.Ignore)]
        public double? MainThreadTime { get; set; }

        [JsonProperty("blockingTime", NullValueHandling = NullValueHandling.Ignore)]
        public long? BlockingTime { get; set; }

        [JsonProperty("transferSize", NullValueHandling = NullValueHandling.Ignore)]
        public long? TransferSize { get; set; }
    }

    public partial class PurpleSummary
    {
        [JsonProperty("wastedMs", NullValueHandling = NullValueHandling.Ignore)]
        public WastedBytes? WastedMs { get; set; }

        [JsonProperty("wastedBytes", NullValueHandling = NullValueHandling.Ignore)]
        public WastedBytes? WastedBytes { get; set; }
    }

    public partial class CriticalRequestChains
    {
        [JsonProperty("id", NullValueHandling = NullValueHandling.Ignore)]
        public string Id { get; set; }

        [JsonProperty("title", NullValueHandling = NullValueHandling.Ignore)]
        public string Title { get; set; }

        [JsonProperty("description", NullValueHandling = NullValueHandling.Ignore)]
        public string Description { get; set; }

        [JsonProperty("score")]
        public double? Score { get; set; }

        [JsonProperty("scoreDisplayMode", NullValueHandling = NullValueHandling.Ignore)]
        public AccesskeysScoreDisplayMode? ScoreDisplayMode { get; set; }

        [JsonProperty("displayValue", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayValue { get; set; }

        [JsonProperty("details", NullValueHandling = NullValueHandling.Ignore)]
        public CriticalRequestChainsDetails Details { get; set; }

        [JsonProperty("numericValue", NullValueHandling = NullValueHandling.Ignore)]
        public double? NumericValue { get; set; }

        [JsonProperty("numericUnit", NullValueHandling = NullValueHandling.Ignore)]
        public NumericUnit? NumericUnit { get; set; }

        [JsonProperty("warnings", NullValueHandling = NullValueHandling.Ignore)]
        public object[] Warnings { get; set; }
    }

    public partial class CriticalRequestChainsDetails
    {
        [JsonProperty("type", NullValueHandling = NullValueHandling.Ignore)]
        public TypeEnum? Type { get; set; }

        [JsonProperty("chains", NullValueHandling = NullValueHandling.Ignore)]
        public Chains Chains { get; set; }

        [JsonProperty("longestChain", NullValueHandling = NullValueHandling.Ignore)]
        public LongestChain LongestChain { get; set; }

        [JsonProperty("items", NullValueHandling = NullValueHandling.Ignore)]
        public IndigoItem[] Items { get; set; }

        [JsonProperty("headings", NullValueHandling = NullValueHandling.Ignore)]
        public TentacledHeading[] Headings { get; set; }

        [JsonProperty("overallSavingsMs", NullValueHandling = NullValueHandling.Ignore)]
        public double? OverallSavingsMs { get; set; }

        [JsonProperty("overallSavingsBytes", NullValueHandling = NullValueHandling.Ignore)]
        public long? OverallSavingsBytes { get; set; }
    }

    public partial class Chains
    {
        [JsonProperty("981F4A8AA2A4801B74AEE4F6B6FA8CFA", NullValueHandling = NullValueHandling.Ignore)]
        public The981F4A8Aa2A4801B74Aee4F6B6Fa8Cfa The981F4A8Aa2A4801B74Aee4F6B6Fa8Cfa { get; set; }
    }

    public partial class The981F4A8Aa2A4801B74Aee4F6B6Fa8Cfa
    {
        [JsonProperty("request", NullValueHandling = NullValueHandling.Ignore)]
        public Request Request { get; set; }

        [JsonProperty("children", NullValueHandling = NullValueHandling.Ignore)]
        public The981F4A8Aa2A4801B74Aee4F6B6Fa8CfaChildren Children { get; set; }
    }

    public partial class The981F4A8Aa2A4801B74Aee4F6B6Fa8CfaChildren
    {
        [JsonProperty("12936.2", NullValueHandling = NullValueHandling.Ignore)]
        public The129362 The129362 { get; set; }

        [JsonProperty("12936.12", NullValueHandling = NullValueHandling.Ignore)]
        public The12936 The1293612 { get; set; }

        [JsonProperty("12936.13", NullValueHandling = NullValueHandling.Ignore)]
        public The12936 The1293613 { get; set; }

        [JsonProperty("12936.14", NullValueHandling = NullValueHandling.Ignore)]
        public The12936 The1293614 { get; set; }

        [JsonProperty("12936.15", NullValueHandling = NullValueHandling.Ignore)]
        public The12936 The1293615 { get; set; }

        [JsonProperty("12936.16", NullValueHandling = NullValueHandling.Ignore)]
        public The12936 The1293616 { get; set; }

        [JsonProperty("12936.17", NullValueHandling = NullValueHandling.Ignore)]
        public The12936 The1293617 { get; set; }

        [JsonProperty("12936.18", NullValueHandling = NullValueHandling.Ignore)]
        public The12936 The1293618 { get; set; }

        [JsonProperty("12936.19", NullValueHandling = NullValueHandling.Ignore)]
        public The12936 The1293619 { get; set; }
    }

    public partial class The12936
    {
        [JsonProperty("request", NullValueHandling = NullValueHandling.Ignore)]
        public Request Request { get; set; }
    }

    public partial class Request
    {
        [JsonProperty("url", NullValueHandling = NullValueHandling.Ignore)]
        public Uri Url { get; set; }

        [JsonProperty("startTime", NullValueHandling = NullValueHandling.Ignore)]
        public double? StartTime { get; set; }

        [JsonProperty("endTime", NullValueHandling = NullValueHandling.Ignore)]
        public double? EndTime { get; set; }

        [JsonProperty("responseReceivedTime", NullValueHandling = NullValueHandling.Ignore)]
        public double? ResponseReceivedTime { get; set; }

        [JsonProperty("transferSize", NullValueHandling = NullValueHandling.Ignore)]
        public long? TransferSize { get; set; }
    }

    public partial class The129362
    {
        [JsonProperty("request", NullValueHandling = NullValueHandling.Ignore)]
        public Request Request { get; set; }

        [JsonProperty("children", NullValueHandling = NullValueHandling.Ignore)]
        public The129362_Children Children { get; set; }
    }

    public partial class The129362_Children
    {
        [JsonProperty("12936.32", NullValueHandling = NullValueHandling.Ignore)]
        public The1293632 The1293632 { get; set; }

        [JsonProperty("12936.33", NullValueHandling = NullValueHandling.Ignore)]
        public The1293633 The1293633 { get; set; }

        [JsonProperty("12936.34", NullValueHandling = NullValueHandling.Ignore)]
        public The12936 The1293634 { get; set; }

        [JsonProperty("12936.35", NullValueHandling = NullValueHandling.Ignore)]
        public The12936 The1293635 { get; set; }

        [JsonProperty("12936.36", NullValueHandling = NullValueHandling.Ignore)]
        public The12936 The1293636 { get; set; }

        [JsonProperty("12936.37", NullValueHandling = NullValueHandling.Ignore)]
        public The12936 The1293637 { get; set; }

        [JsonProperty("12936.38", NullValueHandling = NullValueHandling.Ignore)]
        public The12936 The1293638 { get; set; }

        [JsonProperty("12936.39", NullValueHandling = NullValueHandling.Ignore)]
        public The12936 The1293639 { get; set; }

        [JsonProperty("12936.40", NullValueHandling = NullValueHandling.Ignore)]
        public The1293640 The1293640 { get; set; }

        [JsonProperty("12936.41", NullValueHandling = NullValueHandling.Ignore)]
        public The1293641 The1293641 { get; set; }

        [JsonProperty("12936.42", NullValueHandling = NullValueHandling.Ignore)]
        public The1293642 The1293642 { get; set; }
    }

    public partial class The1293632
    {
        [JsonProperty("request", NullValueHandling = NullValueHandling.Ignore)]
        public Request Request { get; set; }

        [JsonProperty("children", NullValueHandling = NullValueHandling.Ignore)]
        public The1293632_Children Children { get; set; }
    }

    public partial class The1293632_Children
    {
        [JsonProperty("12936.50", NullValueHandling = NullValueHandling.Ignore)]
        public The12936 The1293650 { get; set; }
    }

    public partial class The1293633
    {
        [JsonProperty("request", NullValueHandling = NullValueHandling.Ignore)]
        public Request Request { get; set; }

        [JsonProperty("children", NullValueHandling = NullValueHandling.Ignore)]
        public The1293633_Children Children { get; set; }
    }

    public partial class The1293633_Children
    {
        [JsonProperty("12936.53", NullValueHandling = NullValueHandling.Ignore)]
        public The12936 The1293653 { get; set; }
    }

    public partial class The1293640
    {
        [JsonProperty("request", NullValueHandling = NullValueHandling.Ignore)]
        public Request Request { get; set; }

        [JsonProperty("children", NullValueHandling = NullValueHandling.Ignore)]
        public The1293640_Children Children { get; set; }
    }

    public partial class The1293640_Children
    {
        [JsonProperty("12936.65", NullValueHandling = NullValueHandling.Ignore)]
        public The12936 The1293665 { get; set; }
    }

    public partial class The1293641
    {
        [JsonProperty("request", NullValueHandling = NullValueHandling.Ignore)]
        public Request Request { get; set; }

        [JsonProperty("children", NullValueHandling = NullValueHandling.Ignore)]
        public The1293641_Children Children { get; set; }
    }

    public partial class The1293641_Children
    {
        [JsonProperty("12936.94", NullValueHandling = NullValueHandling.Ignore)]
        public The12936 The1293694 { get; set; }
    }

    public partial class The1293642
    {
        [JsonProperty("request", NullValueHandling = NullValueHandling.Ignore)]
        public Request Request { get; set; }

        [JsonProperty("children", NullValueHandling = NullValueHandling.Ignore)]
        public The1293642_Children Children { get; set; }
    }

    public partial class The1293642_Children
    {
        [JsonProperty("12936.119", NullValueHandling = NullValueHandling.Ignore)]
        public The12936 The12936119 { get; set; }
    }

    public partial class TentacledHeading
    {
        [JsonProperty("key", NullValueHandling = NullValueHandling.Ignore)]
        public string Key { get; set; }

        [JsonProperty("valueType", NullValueHandling = NullValueHandling.Ignore)]
        public ScoreDisplayMode? ValueType { get; set; }

        [JsonProperty("label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("itemType", NullValueHandling = NullValueHandling.Ignore)]
        public ScoreDisplayMode? ItemType { get; set; }

        [JsonProperty("text", NullValueHandling = NullValueHandling.Ignore)]
        public string Text { get; set; }
    }

    public partial class IndigoItem
    {
        [JsonProperty("firstContentfulPaint", NullValueHandling = NullValueHandling.Ignore)]
        public long? FirstContentfulPaint { get; set; }

        [JsonProperty("firstMeaningfulPaint", NullValueHandling = NullValueHandling.Ignore)]
        public long? FirstMeaningfulPaint { get; set; }

        [JsonProperty("largestContentfulPaint", NullValueHandling = NullValueHandling.Ignore)]
        public long? LargestContentfulPaint { get; set; }

        [JsonProperty("interactive", NullValueHandling = NullValueHandling.Ignore)]
        public long? Interactive { get; set; }

        [JsonProperty("speedIndex", NullValueHandling = NullValueHandling.Ignore)]
        public long? SpeedIndex { get; set; }

        [JsonProperty("totalBlockingTime", NullValueHandling = NullValueHandling.Ignore)]
        public long? TotalBlockingTime { get; set; }

        [JsonProperty("maxPotentialFID", NullValueHandling = NullValueHandling.Ignore)]
        public long? MaxPotentialFid { get; set; }

        [JsonProperty("cumulativeLayoutShift", NullValueHandling = NullValueHandling.Ignore)]
        public double? CumulativeLayoutShift { get; set; }

        [JsonProperty("cumulativeLayoutShiftMainFrame", NullValueHandling = NullValueHandling.Ignore)]
        public double? CumulativeLayoutShiftMainFrame { get; set; }

        [JsonProperty("totalCumulativeLayoutShift", NullValueHandling = NullValueHandling.Ignore)]
        public double? TotalCumulativeLayoutShift { get; set; }

        [JsonProperty("observedTimeOrigin", NullValueHandling = NullValueHandling.Ignore)]
        public long? ObservedTimeOrigin { get; set; }

        [JsonProperty("observedTimeOriginTs", NullValueHandling = NullValueHandling.Ignore)]
        public long? ObservedTimeOriginTs { get; set; }

        [JsonProperty("observedNavigationStart", NullValueHandling = NullValueHandling.Ignore)]
        public long? ObservedNavigationStart { get; set; }

        [JsonProperty("observedNavigationStartTs", NullValueHandling = NullValueHandling.Ignore)]
        public long? ObservedNavigationStartTs { get; set; }

        [JsonProperty("observedFirstPaint", NullValueHandling = NullValueHandling.Ignore)]
        public long? ObservedFirstPaint { get; set; }

        [JsonProperty("observedFirstPaintTs", NullValueHandling = NullValueHandling.Ignore)]
        public long? ObservedFirstPaintTs { get; set; }

        [JsonProperty("observedFirstContentfulPaint", NullValueHandling = NullValueHandling.Ignore)]
        public long? ObservedFirstContentfulPaint { get; set; }

        [JsonProperty("observedFirstContentfulPaintTs", NullValueHandling = NullValueHandling.Ignore)]
        public long? ObservedFirstContentfulPaintTs { get; set; }

        [JsonProperty("observedFirstContentfulPaintAllFrames", NullValueHandling = NullValueHandling.Ignore)]
        public long? ObservedFirstContentfulPaintAllFrames { get; set; }

        [JsonProperty("observedFirstContentfulPaintAllFramesTs", NullValueHandling = NullValueHandling.Ignore)]
        public long? ObservedFirstContentfulPaintAllFramesTs { get; set; }

        [JsonProperty("observedFirstMeaningfulPaint", NullValueHandling = NullValueHandling.Ignore)]
        public long? ObservedFirstMeaningfulPaint { get; set; }

        [JsonProperty("observedFirstMeaningfulPaintTs", NullValueHandling = NullValueHandling.Ignore)]
        public long? ObservedFirstMeaningfulPaintTs { get; set; }

        [JsonProperty("observedLargestContentfulPaint", NullValueHandling = NullValueHandling.Ignore)]
        public long? ObservedLargestContentfulPaint { get; set; }

        [JsonProperty("observedLargestContentfulPaintTs", NullValueHandling = NullValueHandling.Ignore)]
        public long? ObservedLargestContentfulPaintTs { get; set; }

        [JsonProperty("observedLargestContentfulPaintAllFrames", NullValueHandling = NullValueHandling.Ignore)]
        public long? ObservedLargestContentfulPaintAllFrames { get; set; }

        [JsonProperty("observedLargestContentfulPaintAllFramesTs", NullValueHandling = NullValueHandling.Ignore)]
        public long? ObservedLargestContentfulPaintAllFramesTs { get; set; }

        [JsonProperty("observedTraceEnd", NullValueHandling = NullValueHandling.Ignore)]
        public long? ObservedTraceEnd { get; set; }

        [JsonProperty("observedTraceEndTs", NullValueHandling = NullValueHandling.Ignore)]
        public long? ObservedTraceEndTs { get; set; }

        [JsonProperty("observedLoad", NullValueHandling = NullValueHandling.Ignore)]
        public long? ObservedLoad { get; set; }

        [JsonProperty("observedLoadTs", NullValueHandling = NullValueHandling.Ignore)]
        public long? ObservedLoadTs { get; set; }

        [JsonProperty("observedDomContentLoaded", NullValueHandling = NullValueHandling.Ignore)]
        public long? ObservedDomContentLoaded { get; set; }

        [JsonProperty("observedDomContentLoadedTs", NullValueHandling = NullValueHandling.Ignore)]
        public long? ObservedDomContentLoadedTs { get; set; }

        [JsonProperty("observedCumulativeLayoutShift", NullValueHandling = NullValueHandling.Ignore)]
        public double? ObservedCumulativeLayoutShift { get; set; }

        [JsonProperty("observedCumulativeLayoutShiftMainFrame", NullValueHandling = NullValueHandling.Ignore)]
        public double? ObservedCumulativeLayoutShiftMainFrame { get; set; }

        [JsonProperty("observedTotalCumulativeLayoutShift", NullValueHandling = NullValueHandling.Ignore)]
        public double? ObservedTotalCumulativeLayoutShift { get; set; }

        [JsonProperty("observedFirstVisualChange", NullValueHandling = NullValueHandling.Ignore)]
        public long? ObservedFirstVisualChange { get; set; }

        [JsonProperty("observedFirstVisualChangeTs", NullValueHandling = NullValueHandling.Ignore)]
        public long? ObservedFirstVisualChangeTs { get; set; }

        [JsonProperty("observedLastVisualChange", NullValueHandling = NullValueHandling.Ignore)]
        public long? ObservedLastVisualChange { get; set; }

        [JsonProperty("observedLastVisualChangeTs", NullValueHandling = NullValueHandling.Ignore)]
        public long? ObservedLastVisualChangeTs { get; set; }

        [JsonProperty("observedSpeedIndex", NullValueHandling = NullValueHandling.Ignore)]
        public long? ObservedSpeedIndex { get; set; }

        [JsonProperty("observedSpeedIndexTs", NullValueHandling = NullValueHandling.Ignore)]
        public long? ObservedSpeedIndexTs { get; set; }

        [JsonProperty("lcpInvalidated", NullValueHandling = NullValueHandling.Ignore)]
        public bool? LcpInvalidated { get; set; }

        [JsonProperty("url", NullValueHandling = NullValueHandling.Ignore)]
        public Uri Url { get; set; }

        [JsonProperty("totalBytes", NullValueHandling = NullValueHandling.Ignore)]
        public long? TotalBytes { get; set; }

        [JsonProperty("wastedMs", NullValueHandling = NullValueHandling.Ignore)]
        public double? WastedMs { get; set; }

        [JsonProperty("resourceType", NullValueHandling = NullValueHandling.Ignore)]
        public string ResourceType { get; set; }

        [JsonProperty("label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("requestCount", NullValueHandling = NullValueHandling.Ignore)]
        public long? RequestCount { get; set; }

        [JsonProperty("transferSize", NullValueHandling = NullValueHandling.Ignore)]
        public long? TransferSize { get; set; }

        [JsonProperty("responseTime", NullValueHandling = NullValueHandling.Ignore)]
        public double? ResponseTime { get; set; }

        [JsonProperty("wastedBytes", NullValueHandling = NullValueHandling.Ignore)]
        public long? WastedBytes { get; set; }

        [JsonProperty("wastedPercent", NullValueHandling = NullValueHandling.Ignore)]
        public double? WastedPercent { get; set; }
    }

    public partial class LongestChain
    {
        [JsonProperty("duration", NullValueHandling = NullValueHandling.Ignore)]
        public double? Duration { get; set; }

        [JsonProperty("length", NullValueHandling = NullValueHandling.Ignore)]
        public long? Length { get; set; }

        [JsonProperty("transferSize", NullValueHandling = NullValueHandling.Ignore)]
        public long? TransferSize { get; set; }
    }

    public partial class CumulativeLayoutShift
    {
        [JsonProperty("id", NullValueHandling = NullValueHandling.Ignore)]
        public string Id { get; set; }

        [JsonProperty("title", NullValueHandling = NullValueHandling.Ignore)]
        public string Title { get; set; }

        [JsonProperty("description", NullValueHandling = NullValueHandling.Ignore)]
        public string Description { get; set; }

        [JsonProperty("score", NullValueHandling = NullValueHandling.Ignore)]
        public double? Score { get; set; }

        [JsonProperty("scoreDisplayMode", NullValueHandling = NullValueHandling.Ignore)]
        public ScoreDisplayMode? ScoreDisplayMode { get; set; }

        [JsonProperty("numericValue", NullValueHandling = NullValueHandling.Ignore)]
        public double? NumericValue { get; set; }

        [JsonProperty("numericUnit", NullValueHandling = NullValueHandling.Ignore)]
        public string NumericUnit { get; set; }

        [JsonProperty("displayValue", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayValue { get; set; }

        [JsonProperty("details", NullValueHandling = NullValueHandling.Ignore)]
        public CumulativeLayoutShiftDetails Details { get; set; }
    }

    public partial class CumulativeLayoutShiftDetails
    {
        [JsonProperty("type", NullValueHandling = NullValueHandling.Ignore)]
        public TypeEnum? Type { get; set; }

        [JsonProperty("items", NullValueHandling = NullValueHandling.Ignore)]
        public IndecentItem[] Items { get; set; }
    }

    public partial class IndecentItem
    {
        [JsonProperty("cumulativeLayoutShiftMainFrame", NullValueHandling = NullValueHandling.Ignore)]
        public double? CumulativeLayoutShiftMainFrame { get; set; }

        [JsonProperty("totalCumulativeLayoutShift", NullValueHandling = NullValueHandling.Ignore)]
        public double? TotalCumulativeLayoutShift { get; set; }
    }

    public partial class DomSize
    {
        [JsonProperty("id", NullValueHandling = NullValueHandling.Ignore)]
        public string Id { get; set; }

        [JsonProperty("title", NullValueHandling = NullValueHandling.Ignore)]
        public string Title { get; set; }

        [JsonProperty("description", NullValueHandling = NullValueHandling.Ignore)]
        public string Description { get; set; }

        [JsonProperty("score", NullValueHandling = NullValueHandling.Ignore)]
        public long? Score { get; set; }

        [JsonProperty("scoreDisplayMode", NullValueHandling = NullValueHandling.Ignore)]
        public ScoreDisplayMode? ScoreDisplayMode { get; set; }

        [JsonProperty("numericValue", NullValueHandling = NullValueHandling.Ignore)]
        public long? NumericValue { get; set; }

        [JsonProperty("numericUnit", NullValueHandling = NullValueHandling.Ignore)]
        public NumericUnit? NumericUnit { get; set; }

        [JsonProperty("displayValue", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayValue { get; set; }

        [JsonProperty("details", NullValueHandling = NullValueHandling.Ignore)]
        public DomSizeDetails Details { get; set; }
    }

    public partial class DomSizeDetails
    {
        [JsonProperty("type", NullValueHandling = NullValueHandling.Ignore)]
        public TypeEnum? Type { get; set; }

        [JsonProperty("headings", NullValueHandling = NullValueHandling.Ignore)]
        public PurpleHeading[] Headings { get; set; }

        [JsonProperty("items", NullValueHandling = NullValueHandling.Ignore)]
        public HilariousItem[] Items { get; set; }

        [JsonProperty("summary", NullValueHandling = NullValueHandling.Ignore)]
        public PurpleSummary Summary { get; set; }

        [JsonProperty("debugData", NullValueHandling = NullValueHandling.Ignore)]
        public TentacledDebugData DebugData { get; set; }

        [JsonProperty("overallSavingsMs", NullValueHandling = NullValueHandling.Ignore)]
        public double? OverallSavingsMs { get; set; }
    }

    public partial class TentacledDebugData
    {
        [JsonProperty("type", NullValueHandling = NullValueHandling.Ignore)]
        public TypeEnum? Type { get; set; }

        [JsonProperty("impact", NullValueHandling = NullValueHandling.Ignore)]
        public string Impact { get; set; }

        [JsonProperty("tags", NullValueHandling = NullValueHandling.Ignore)]
        public string[] Tags { get; set; }

        [JsonProperty("manifestUrl")]
        public object ManifestUrl { get; set; }
    }

    public partial class HilariousItem
    {
        [JsonProperty("url", NullValueHandling = NullValueHandling.Ignore)]
        public string Url { get; set; }

        [JsonProperty("total", NullValueHandling = NullValueHandling.Ignore)]
        public double? Total { get; set; }

        [JsonProperty("scripting", NullValueHandling = NullValueHandling.Ignore)]
        public double? Scripting { get; set; }

        [JsonProperty("scriptParseCompile", NullValueHandling = NullValueHandling.Ignore)]
        public double? ScriptParseCompile { get; set; }

        [JsonProperty("node", NullValueHandling = NullValueHandling.Ignore)]
        public RelatedNodeClass Node { get; set; }

        [JsonProperty("subItems", NullValueHandling = NullValueHandling.Ignore)]
        public PurpleSubItems SubItems { get; set; }

        [JsonProperty("severity", NullValueHandling = NullValueHandling.Ignore)]
        public string Severity { get; set; }

        [JsonProperty("description", NullValueHandling = NullValueHandling.Ignore)]
        public string Description { get; set; }

        [JsonProperty("statistic", NullValueHandling = NullValueHandling.Ignore)]
        public string Statistic { get; set; }

        [JsonProperty("value", NullValueHandling = NullValueHandling.Ignore)]
        public long? Value { get; set; }

        [JsonProperty("wastedMs", NullValueHandling = NullValueHandling.Ignore)]
        public double? WastedMs { get; set; }

        [JsonProperty("source", NullValueHandling = NullValueHandling.Ignore)]
        public Source Source { get; set; }

        [JsonProperty("selector", NullValueHandling = NullValueHandling.Ignore)]
        public string Selector { get; set; }

        [JsonProperty("coverage", NullValueHandling = NullValueHandling.Ignore)]
        public string Coverage { get; set; }

        [JsonProperty("fontSize", NullValueHandling = NullValueHandling.Ignore)]
        public string FontSize { get; set; }

        [JsonProperty("displayedAspectRatio", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayedAspectRatio { get; set; }

        [JsonProperty("actualAspectRatio", NullValueHandling = NullValueHandling.Ignore)]
        public string ActualAspectRatio { get; set; }

        [JsonProperty("doRatiosMatch", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DoRatiosMatch { get; set; }

        [JsonProperty("reason", NullValueHandling = NullValueHandling.Ignore)]
        public string Reason { get; set; }

        [JsonProperty("resolution", NullValueHandling = NullValueHandling.Ignore)]
        public Resolution? Resolution { get; set; }

        [JsonProperty("score", NullValueHandling = NullValueHandling.Ignore)]
        public double? Score { get; set; }

        [JsonProperty("duration", NullValueHandling = NullValueHandling.Ignore)]
        public double? Duration { get; set; }

        [JsonProperty("startTime", NullValueHandling = NullValueHandling.Ignore)]
        public double? StartTime { get; set; }

        [JsonProperty("group", NullValueHandling = NullValueHandling.Ignore)]
        public string Group { get; set; }

        [JsonProperty("groupLabel", NullValueHandling = NullValueHandling.Ignore)]
        public string GroupLabel { get; set; }

        [JsonProperty("protocol", NullValueHandling = NullValueHandling.Ignore)]
        public Protocol? Protocol { get; set; }

        [JsonProperty("endTime", NullValueHandling = NullValueHandling.Ignore)]
        public double? EndTime { get; set; }

        [JsonProperty("finished", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Finished { get; set; }

        [JsonProperty("transferSize", NullValueHandling = NullValueHandling.Ignore)]
        public long? TransferSize { get; set; }

        [JsonProperty("resourceSize", NullValueHandling = NullValueHandling.Ignore)]
        public long? ResourceSize { get; set; }

        [JsonProperty("statusCode", NullValueHandling = NullValueHandling.Ignore)]
        public long? StatusCode { get; set; }

        [JsonProperty("mimeType", NullValueHandling = NullValueHandling.Ignore)]
        public string MimeType { get; set; }

        [JsonProperty("resourceType", NullValueHandling = NullValueHandling.Ignore)]
        public string ResourceType { get; set; }

        [JsonProperty("origin", NullValueHandling = NullValueHandling.Ignore)]
        public Uri Origin { get; set; }

        [JsonProperty("rtt", NullValueHandling = NullValueHandling.Ignore)]
        public double? Rtt { get; set; }

        [JsonProperty("serverResponseTime", NullValueHandling = NullValueHandling.Ignore)]
        public double? ServerResponseTime { get; set; }

        [JsonProperty("highestSeverity", NullValueHandling = NullValueHandling.Ignore)]
        public string HighestSeverity { get; set; }

        [JsonProperty("vulnCount", NullValueHandling = NullValueHandling.Ignore)]
        public long? VulnCount { get; set; }

        [JsonProperty("detectedLib", NullValueHandling = NullValueHandling.Ignore)]
        public DetectedLib DetectedLib { get; set; }

        [JsonProperty("responseTime", NullValueHandling = NullValueHandling.Ignore)]
        public double? ResponseTime { get; set; }

        [JsonProperty("totalBytes", NullValueHandling = NullValueHandling.Ignore)]
        public long? TotalBytes { get; set; }

        [JsonProperty("debugData", NullValueHandling = NullValueHandling.Ignore)]
        public ItemDebugData DebugData { get; set; }

        [JsonProperty("cacheLifetimeMs", NullValueHandling = NullValueHandling.Ignore)]
        public long? CacheLifetimeMs { get; set; }

        [JsonProperty("cacheHitProbability", NullValueHandling = NullValueHandling.Ignore)]
        public double? CacheHitProbability { get; set; }

        [JsonProperty("wastedBytes", NullValueHandling = NullValueHandling.Ignore)]
        public double? WastedBytes { get; set; }
    }

    public partial class DuplicatedJavascript
    {
        [JsonProperty("id", NullValueHandling = NullValueHandling.Ignore)]
        public string Id { get; set; }

        [JsonProperty("title", NullValueHandling = NullValueHandling.Ignore)]
        public string Title { get; set; }

        [JsonProperty("description", NullValueHandling = NullValueHandling.Ignore)]
        public string Description { get; set; }

        [JsonProperty("score", NullValueHandling = NullValueHandling.Ignore)]
        public double? Score { get; set; }

        [JsonProperty("scoreDisplayMode", NullValueHandling = NullValueHandling.Ignore)]
        public ScoreDisplayMode? ScoreDisplayMode { get; set; }

        [JsonProperty("numericValue", NullValueHandling = NullValueHandling.Ignore)]
        public long? NumericValue { get; set; }

        [JsonProperty("numericUnit", NullValueHandling = NullValueHandling.Ignore)]
        public NumericUnit? NumericUnit { get; set; }

        [JsonProperty("displayValue", NullValueHandling = NullValueHandling.Ignore)]
        public string DisplayValue { get; set; }

        [JsonProperty("details", NullValueHandling = NullValueHandling.Ignore)]
        public DuplicatedJavascriptDetails Details { get; set; }

        [JsonProperty("warnings", NullValueHandling = NullValueHandling.Ignore)]
        public object[] Warnings { get; set; }
    }

    public partial class DuplicatedJavascriptDetails
    {
        [JsonProperty("type", NullValueHandling = NullValueHandling.Ignore)]
        public TypeEnum? Type { get; set; }

        [JsonProperty("headings", NullValueHandling = NullValueHandling.Ignore)]
        public StickyHeading[] Headings { get; set; }

        [JsonProperty("items", NullValueHandling = NullValueHandling.Ignore)]
        public AmbitiousItem[] Items { get; set; }

        [JsonProperty("overallSavingsMs", NullValueHandling = NullValueHandling.Ignore)]
        public double? OverallSavingsMs { get; set; }

        [JsonProperty("overallSavingsBytes", NullValueHandling = NullValueHandling.Ignore)]
        public double? OverallSavingsBytes { get; set; }

        [JsonProperty("summary", NullValueHandling = NullValueHandling.Ignore)]
        public PurpleSummary Summary { get; set; }
    }

    public partial class StickyHeading
    {
        [JsonProperty("key", NullValueHandling = NullValueHandling.Ignore)]
        public string Key { get; set; }

        [JsonProperty("valueType", NullValueHandling = NullValueHandling.Ignore)]
        public ScoreDisplayMode? ValueType { get; set; }

        [JsonProperty("label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("itemType", NullValueHandling = NullValueHandling.Ignore)]
        public ScoreDisplayMode? ItemType { get; set; }

        [JsonProperty("text", NullValueHandling = NullValueHandling.Ignore)]
        public string Text { get; set; }

        [JsonProperty("subItemsHeading", NullValueHandling = NullValueHandling.Ignore)]
        public FluffySubItemsHeading SubItemsHeading { get; set; }

        [JsonProperty("granularity", NullValueHandling = NullValueHandling.Ignore)]
        public long? Granularity { get; set; }
    }

    public partial class FluffySubItemsHeading
    {
        [JsonProperty("key", NullValueHandling = NullValueHandling.Ignore)]
        public string Key { get; set; }

        [JsonProperty("itemType", NullValueHandling = NullValueHandling.Ignore)]
        public ScoreDisplayMode? ItemType { get; set; }

        [JsonProperty("valueType", NullValueHandling = NullValueHandling.Ignore)]
        public ScoreDisplayMode? ValueType { get; set; }
    }

    public partial class AmbitiousItem
    {
        [JsonProperty("node", NullValueHandling = NullValueHandling.Ignore)]
        public RelatedNodeClass Node { get; set; }

        [JsonProperty("url", NullValueHandling = NullValueHandling.Ignore)]
        public Uri Url { get; set; }

        [JsonProperty("fromProtocol", NullValueHandling = NullValueHandling.Ignore)]
        public bool? FromProtocol { get; set; }

        [JsonProperty("isCrossOrigin", NullValueHandling = NullValueHandling.Ignore)]
        public bool? IsCrossOrigin { get; set; }

        [JsonProperty("totalBytes", NullValueHandling = NullValueHandling.Ignore)]
        public long? TotalBytes { get; set; }

        [JsonProperty("wastedBytes", NullValueHandling = NullValueHandling.Ignore)]
        public double? WastedBytes { get; set; }

        [JsonProperty("wastedWebpBytes", NullValueHandling = NullValueHandling.Ignore)]
        public long? WastedWebpBytes { get; set; }

        [JsonProperty("wastedMs", NullValueHandling = NullValueHandling.Ignore)]
        public double? WastedMs { get; set; }

        [JsonProperty("resourceType", NullValueHandling = NullValueHandling.Ignore)]
        public string ResourceType { get; set; }

        [JsonProperty("label", NullValueHandling = NullValueHandling.Ignore)]
        public string Label { get; set; }

        [JsonProperty("requestCount", NullValueHandling = NullValueHandling.Ignore)]
        public long? RequestCount { get; set; }

        [JsonProperty("transferSize", NullValueHandling = NullValueHandling.Ignore)]
        public long? TransferSize { get; set; }

        [JsonProperty("mainThreadTime", NullValueHandling = NullValueHandling.Ignore)]
        public double? MainThreadTime { get; set; }

        [JsonProperty("blockingTime", NullValueHandling = NullValueHandling.Ignore)]
        public long? BlockingTime { get; set; }

        [JsonProperty("entity", NullValueHandling = NullValueHandling.Ignore)]
        public DetectedLib Entity { get; set; }

        [JsonProperty("subItems", NullValueHandling = NullValueHandling.Ignore)]
        public FluffySubItems SubItems { get; set; }

        [JsonProperty("wastedPercent", NullValueHandling = NullValueHandling.Ignore)]
        public double? WastedPercent { get; set; }

        [JsonProperty("protocol", NullValueHandling = NullValueHandling.Ignore)]
        public Protocol? Protocol { get; set; }
    }

    public partial class Categories
    {
        [JsonProperty("performance", NullValueHandling = NullValueHandling.Ignore)]
        public Performance Performance { get; set; }

        [JsonProperty("accessibility", NullValueHandling = NullValueHandling.Ignore)]
        public Accessibility Accessibility { get; set; }

        [JsonProperty("best-practices", NullValueHandling = NullValueHandling.Ignore)]
        public BestPractices BestPractices { get; set; }

        [JsonProperty("seo", NullValueHandling = NullValueHandling.Ignore)]
        public Accessibility Seo { get; set; }

        [JsonProperty("pwa", NullValueHandling = NullValueHandling.Ignore)]
        public Accessibility Pwa { get; set; }
    }

    public partial class Accessibility
    {
        [JsonProperty("title", NullValueHandling = NullValueHandling.Ignore)]
        public string Title { get; set; }

        [JsonProperty("description", NullValueHandling = NullValueHandling.Ignore)]
        public string Description { get; set; }

        [JsonProperty("manualDescription", NullValueHandling = NullValueHandling.Ignore)]
        public string ManualDescription { get; set; }

        [JsonProperty("supportedModes", NullValueHandling = NullValueHandling.Ignore)]
        public string[] SupportedModes { get; set; }

        [JsonProperty("auditRefs", NullValueHandling = NullValueHandling.Ignore)]
        public AccessibilityAuditRef[] AuditRefs { get; set; }

        [JsonProperty("id", NullValueHandling = NullValueHandling.Ignore)]
        public string Id { get; set; }

        [JsonProperty("score", NullValueHandling = NullValueHandling.Ignore)]
        public double? Score { get; set; }
    }

    public partial class AccessibilityAuditRef
    {
        [JsonProperty("id", NullValueHandling = NullValueHandling.Ignore)]
        public string Id { get; set; }

        [JsonProperty("weight", NullValueHandling = NullValueHandling.Ignore)]
        public long? Weight { get; set; }

        [JsonProperty("group", NullValueHandling = NullValueHandling.Ignore)]
        public string Group { get; set; }
    }

    public partial class BestPractices
    {
        [JsonProperty("title", NullValueHandling = NullValueHandling.Ignore)]
        public string Title { get; set; }

        [JsonProperty("supportedModes", NullValueHandling = NullValueHandling.Ignore)]
        public string[] SupportedModes { get; set; }

        [JsonProperty("auditRefs", NullValueHandling = NullValueHandling.Ignore)]
        public AccessibilityAuditRef[] AuditRefs { get; set; }

        [JsonProperty("id", NullValueHandling = NullValueHandling.Ignore)]
        public string Id { get; set; }

        [JsonProperty("score", NullValueHandling = NullValueHandling.Ignore)]
        public double? Score { get; set; }
    }

    public partial class Performance
    {
        [JsonProperty("title", NullValueHandling = NullValueHandling.Ignore)]
        public string Title { get; set; }

        [JsonProperty("supportedModes", NullValueHandling = NullValueHandling.Ignore)]
        public string[] SupportedModes { get; set; }

        [JsonProperty("auditRefs", NullValueHandling = NullValueHandling.Ignore)]
        public PerformanceAuditRef[] AuditRefs { get; set; }

        [JsonProperty("id", NullValueHandling = NullValueHandling.Ignore)]
        public string Id { get; set; }

        [JsonProperty("score", NullValueHandling = NullValueHandling.Ignore)]
        public double? Score { get; set; }
    }

    public partial class PerformanceAuditRef
    {
        [JsonProperty("id", NullValueHandling = NullValueHandling.Ignore)]
        public string Id { get; set; }

        [JsonProperty("weight", NullValueHandling = NullValueHandling.Ignore)]
        public long? Weight { get; set; }

        [JsonProperty("group", NullValueHandling = NullValueHandling.Ignore)]
        public Group? Group { get; set; }

        [JsonProperty("acronym", NullValueHandling = NullValueHandling.Ignore)]
        public string Acronym { get; set; }

        [JsonProperty("relevantAudits", NullValueHandling = NullValueHandling.Ignore)]
        public string[] RelevantAudits { get; set; }
    }

    public partial class CategoryGroups
    {
        [JsonProperty("metrics", NullValueHandling = NullValueHandling.Ignore)]
        public BestPracticesBrowserCompat Metrics { get; set; }

        [JsonProperty("load-opportunities", NullValueHandling = NullValueHandling.Ignore)]
        public A11YAria LoadOpportunities { get; set; }

        [JsonProperty("budgets", NullValueHandling = NullValueHandling.Ignore)]
        public A11YAria Budgets { get; set; }

        [JsonProperty("diagnostics", NullValueHandling = NullValueHandling.Ignore)]
        public A11YAria Diagnostics { get; set; }

        [JsonProperty("pwa-installable", NullValueHandling = NullValueHandling.Ignore)]
        public BestPracticesBrowserCompat PwaInstallable { get; set; }

        [JsonProperty("pwa-optimized", NullValueHandling = NullValueHandling.Ignore)]
        public BestPracticesBrowserCompat PwaOptimized { get; set; }

        [JsonProperty("a11y-best-practices", NullValueHandling = NullValueHandling.Ignore)]
        public A11YAria A11YBestPractices { get; set; }

        [JsonProperty("a11y-color-contrast", NullValueHandling = NullValueHandling.Ignore)]
        public A11YAria A11YColorContrast { get; set; }

        [JsonProperty("a11y-names-labels", NullValueHandling = NullValueHandling.Ignore)]
        public A11YAria A11YNamesLabels { get; set; }

        [JsonProperty("a11y-navigation", NullValueHandling = NullValueHandling.Ignore)]
        public A11YAria A11YNavigation { get; set; }

        [JsonProperty("a11y-aria", NullValueHandling = NullValueHandling.Ignore)]
        public A11YAria A11YAria { get; set; }

        [JsonProperty("a11y-language", NullValueHandling = NullValueHandling.Ignore)]
        public A11YAria A11YLanguage { get; set; }

        [JsonProperty("a11y-audio-video", NullValueHandling = NullValueHandling.Ignore)]
        public A11YAria A11YAudioVideo { get; set; }

        [JsonProperty("a11y-tables-lists", NullValueHandling = NullValueHandling.Ignore)]
        public A11YAria A11YTablesLists { get; set; }

        [JsonProperty("seo-mobile", NullValueHandling = NullValueHandling.Ignore)]
        public A11YAria SeoMobile { get; set; }

        [JsonProperty("seo-content", NullValueHandling = NullValueHandling.Ignore)]
        public A11YAria SeoContent { get; set; }

        [JsonProperty("seo-crawl", NullValueHandling = NullValueHandling.Ignore)]
        public A11YAria SeoCrawl { get; set; }

        [JsonProperty("best-practices-trust-safety", NullValueHandling = NullValueHandling.Ignore)]
        public BestPracticesBrowserCompat BestPracticesTrustSafety { get; set; }

        [JsonProperty("best-practices-ux", NullValueHandling = NullValueHandling.Ignore)]
        public BestPracticesBrowserCompat BestPracticesUx { get; set; }

        [JsonProperty("best-practices-browser-compat", NullValueHandling = NullValueHandling.Ignore)]
        public BestPracticesBrowserCompat BestPracticesBrowserCompat { get; set; }

        [JsonProperty("best-practices-general", NullValueHandling = NullValueHandling.Ignore)]
        public BestPracticesBrowserCompat BestPracticesGeneral { get; set; }

        [JsonProperty("hidden", NullValueHandling = NullValueHandling.Ignore)]
        public BestPracticesBrowserCompat Hidden { get; set; }
    }

    public partial class A11YAria
    {
        [JsonProperty("title", NullValueHandling = NullValueHandling.Ignore)]
        public string Title { get; set; }

        [JsonProperty("description", NullValueHandling = NullValueHandling.Ignore)]
        public string Description { get; set; }
    }

    public partial class BestPracticesBrowserCompat
    {
        [JsonProperty("title", NullValueHandling = NullValueHandling.Ignore)]
        public string Title { get; set; }
    }

    public partial class ConfigSettings
    {
        [JsonProperty("output", NullValueHandling = NullValueHandling.Ignore)]
        public string[] Output { get; set; }

        [JsonProperty("maxWaitForFcp", NullValueHandling = NullValueHandling.Ignore)]
        public long? MaxWaitForFcp { get; set; }

        [JsonProperty("maxWaitForLoad", NullValueHandling = NullValueHandling.Ignore)]
        public long? MaxWaitForLoad { get; set; }

        [JsonProperty("formFactor", NullValueHandling = NullValueHandling.Ignore)]
        public string FormFactor { get; set; }

        [JsonProperty("throttling", NullValueHandling = NullValueHandling.Ignore)]
        public Throttling Throttling { get; set; }

        [JsonProperty("throttlingMethod", NullValueHandling = NullValueHandling.Ignore)]
        public string ThrottlingMethod { get; set; }

        [JsonProperty("screenEmulation", NullValueHandling = NullValueHandling.Ignore)]
        public ScreenEmulation ScreenEmulation { get; set; }

        [JsonProperty("emulatedUserAgent", NullValueHandling = NullValueHandling.Ignore)]
        public string EmulatedUserAgent { get; set; }

        [JsonProperty("auditMode", NullValueHandling = NullValueHandling.Ignore)]
        public bool? AuditMode { get; set; }

        [JsonProperty("gatherMode", NullValueHandling = NullValueHandling.Ignore)]
        public bool? GatherMode { get; set; }

        [JsonProperty("disableStorageReset", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DisableStorageReset { get; set; }

        [JsonProperty("debugNavigation", NullValueHandling = NullValueHandling.Ignore)]
        public bool? DebugNavigation { get; set; }

        [JsonProperty("channel", NullValueHandling = NullValueHandling.Ignore)]
        public string Channel { get; set; }

        [JsonProperty("budgets")]
        public object Budgets { get; set; }

        [JsonProperty("locale", NullValueHandling = NullValueHandling.Ignore)]
        public string Locale { get; set; }

        [JsonProperty("blockedUrlPatterns")]
        public object BlockedUrlPatterns { get; set; }

        [JsonProperty("additionalTraceCategories")]
        public object AdditionalTraceCategories { get; set; }

        [JsonProperty("extraHeaders")]
        public object ExtraHeaders { get; set; }

        [JsonProperty("precomputedLanternData")]
        public object PrecomputedLanternData { get; set; }

        [JsonProperty("onlyAudits")]
        public object OnlyAudits { get; set; }

        [JsonProperty("onlyCategories")]
        public object OnlyCategories { get; set; }

        [JsonProperty("skipAudits")]
        public object SkipAudits { get; set; }
    }

    public partial class ScreenEmulation
    {
        [JsonProperty("mobile", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Mobile { get; set; }

        [JsonProperty("width", NullValueHandling = NullValueHandling.Ignore)]
        public long? Width { get; set; }

        [JsonProperty("height", NullValueHandling = NullValueHandling.Ignore)]
        public long? Height { get; set; }

        [JsonProperty("deviceScaleFactor", NullValueHandling = NullValueHandling.Ignore)]
        public double? DeviceScaleFactor { get; set; }

        [JsonProperty("disabled", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Disabled { get; set; }
    }

    public partial class Throttling
    {
        [JsonProperty("rttMs", NullValueHandling = NullValueHandling.Ignore)]
        public long? RttMs { get; set; }

        [JsonProperty("throughputKbps", NullValueHandling = NullValueHandling.Ignore)]
        public double? ThroughputKbps { get; set; }

        [JsonProperty("requestLatencyMs", NullValueHandling = NullValueHandling.Ignore)]
        public double? RequestLatencyMs { get; set; }

        [JsonProperty("downloadThroughputKbps", NullValueHandling = NullValueHandling.Ignore)]
        public double? DownloadThroughputKbps { get; set; }

        [JsonProperty("uploadThroughputKbps", NullValueHandling = NullValueHandling.Ignore)]
        public long? UploadThroughputKbps { get; set; }

        [JsonProperty("cpuSlowdownMultiplier", NullValueHandling = NullValueHandling.Ignore)]
        public long? CpuSlowdownMultiplier { get; set; }
    }

    public partial class Environment
    {
        [JsonProperty("networkUserAgent", NullValueHandling = NullValueHandling.Ignore)]
        public string NetworkUserAgent { get; set; }

        [JsonProperty("hostUserAgent", NullValueHandling = NullValueHandling.Ignore)]
        public string HostUserAgent { get; set; }

        [JsonProperty("benchmarkIndex", NullValueHandling = NullValueHandling.Ignore)]
        public double? BenchmarkIndex { get; set; }

        [JsonProperty("credits", NullValueHandling = NullValueHandling.Ignore)]
        public Credits Credits { get; set; }
    }

    public partial class Credits
    {
        [JsonProperty("axe-core", NullValueHandling = NullValueHandling.Ignore)]
        public string AxeCore { get; set; }
    }

    public partial class I18N
    {
        [JsonProperty("rendererFormattedStrings", NullValueHandling = NullValueHandling.Ignore)]
        public Dictionary<string, string> RendererFormattedStrings { get; set; }

        [JsonProperty("icuMessagePaths", NullValueHandling = NullValueHandling.Ignore)]
        public IcuMessagePaths IcuMessagePaths { get; set; }
    }

    public partial class IcuMessagePaths
    {
        [JsonProperty("lighthouse-core/audits/is-on-https.js | failureTitle", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsIsOnHttpsJsFailureTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/is-on-https.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsIsOnHttpsJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/is-on-https.js | displayValue", NullValueHandling = NullValueHandling.Ignore)]
        public LighthouseCoreAuditsJsDisplayValue[] LighthouseCoreAuditsIsOnHttpsJsDisplayValue { get; set; }

        [JsonProperty("lighthouse-core/audits/is-on-https.js | columnInsecureURL", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsIsOnHttpsJsColumnInsecureUrl { get; set; }

        [JsonProperty("lighthouse-core/audits/is-on-https.js | columnResolution", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsIsOnHttpsJsColumnResolution { get; set; }

        [JsonProperty("lighthouse-core/audits/is-on-https.js | allowed", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsIsOnHttpsJsAllowed { get; set; }

        [JsonProperty("lighthouse-core/audits/service-worker.js | failureTitle", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsServiceWorkerJsFailureTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/service-worker.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsServiceWorkerJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/viewport.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsViewportJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/viewport.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsViewportJsDescription { get; set; }

        [JsonProperty("lighthouse-core/lib/i18n/i18n.js | firstContentfulPaintMetric", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreLibI18NI18NJsFirstContentfulPaintMetric { get; set; }

        [JsonProperty("lighthouse-core/audits/metrics/first-contentful-paint.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsMetricsFirstContentfulPaintJsDescription { get; set; }

        [JsonProperty("lighthouse-core/lib/i18n/i18n.js | seconds", NullValueHandling = NullValueHandling.Ignore)]
        public LighthouseCore[] LighthouseCoreLibI18NI18NJsSeconds { get; set; }

        [JsonProperty("lighthouse-core/lib/i18n/i18n.js | largestContentfulPaintMetric", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreLibI18NI18NJsLargestContentfulPaintMetric { get; set; }

        [JsonProperty("lighthouse-core/audits/metrics/largest-contentful-paint.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsMetricsLargestContentfulPaintJsDescription { get; set; }

        [JsonProperty("lighthouse-core/lib/i18n/i18n.js | firstMeaningfulPaintMetric", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreLibI18NI18NJsFirstMeaningfulPaintMetric { get; set; }

        [JsonProperty("lighthouse-core/audits/metrics/first-meaningful-paint.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsMetricsFirstMeaningfulPaintJsDescription { get; set; }

        [JsonProperty("lighthouse-core/lib/i18n/i18n.js | speedIndexMetric", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreLibI18NI18NJsSpeedIndexMetric { get; set; }

        [JsonProperty("lighthouse-core/audits/metrics/speed-index.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsMetricsSpeedIndexJsDescription { get; set; }

        [JsonProperty("lighthouse-core/lib/i18n/i18n.js | totalBlockingTimeMetric", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreLibI18NI18NJsTotalBlockingTimeMetric { get; set; }

        [JsonProperty("lighthouse-core/audits/metrics/total-blocking-time.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsMetricsTotalBlockingTimeJsDescription { get; set; }

        [JsonProperty("lighthouse-core/lib/i18n/i18n.js | ms", NullValueHandling = NullValueHandling.Ignore)]
        public LighthouseCore[] LighthouseCoreLibI18NI18NJsMs { get; set; }

        [JsonProperty("lighthouse-core/lib/i18n/i18n.js | maxPotentialFIDMetric", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreLibI18NI18NJsMaxPotentialFidMetric { get; set; }

        [JsonProperty("lighthouse-core/audits/metrics/max-potential-fid.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsMetricsMaxPotentialFidJsDescription { get; set; }

        [JsonProperty("lighthouse-core/lib/i18n/i18n.js | cumulativeLayoutShiftMetric", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreLibI18NI18NJsCumulativeLayoutShiftMetric { get; set; }

        [JsonProperty("lighthouse-core/audits/metrics/cumulative-layout-shift.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsMetricsCumulativeLayoutShiftJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/errors-in-console.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsErrorsInConsoleJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/errors-in-console.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsErrorsInConsoleJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/server-response-time.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsServerResponseTimeJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/server-response-time.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsServerResponseTimeJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/server-response-time.js | displayValue", NullValueHandling = NullValueHandling.Ignore)]
        public LighthouseCore[] LighthouseCoreAuditsServerResponseTimeJsDisplayValue { get; set; }

        [JsonProperty("lighthouse-core/lib/i18n/i18n.js | columnURL", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreLibI18NI18NJsColumnUrl { get; set; }

        [JsonProperty("lighthouse-core/lib/i18n/i18n.js | columnTimeSpent", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreLibI18NI18NJsColumnTimeSpent { get; set; }

        [JsonProperty("lighthouse-core/lib/i18n/i18n.js | interactiveMetric", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreLibI18NI18NJsInteractiveMetric { get; set; }

        [JsonProperty("lighthouse-core/audits/metrics/interactive.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsMetricsInteractiveJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/user-timings.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsUserTimingsJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/user-timings.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsUserTimingsJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/critical-request-chains.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsCriticalRequestChainsJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/critical-request-chains.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsCriticalRequestChainsJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/critical-request-chains.js | displayValue", NullValueHandling = NullValueHandling.Ignore)]
        public LighthouseCoreAuditsJsDisplayValue[] LighthouseCoreAuditsCriticalRequestChainsJsDisplayValue { get; set; }

        [JsonProperty("lighthouse-core/audits/redirects.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsRedirectsJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/redirects.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsRedirectsJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/installable-manifest.js | failureTitle", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsInstallableManifestJsFailureTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/installable-manifest.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsInstallableManifestJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/installable-manifest.js | displayValue", NullValueHandling = NullValueHandling.Ignore)]
        public LighthouseCoreAuditsJsDisplayValue[] LighthouseCoreAuditsInstallableManifestJsDisplayValue { get; set; }

        [JsonProperty("lighthouse-core/audits/installable-manifest.js | columnValue", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsInstallableManifestJsColumnValue { get; set; }

        [JsonProperty("lighthouse-core/audits/apple-touch-icon.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAppleTouchIconJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/apple-touch-icon.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAppleTouchIconJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/splash-screen.js | failureTitle", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsSplashScreenJsFailureTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/splash-screen.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsSplashScreenJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/themed-omnibox.js | failureTitle", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsThemedOmniboxJsFailureTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/themed-omnibox.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsThemedOmniboxJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/maskable-icon.js | failureTitle", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsMaskableIconJsFailureTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/maskable-icon.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsMaskableIconJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/content-width.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsContentWidthJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/content-width.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsContentWidthJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/image-aspect-ratio.js | failureTitle", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsImageAspectRatioJsFailureTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/image-aspect-ratio.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsImageAspectRatioJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/image-aspect-ratio.js | columnDisplayed", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsImageAspectRatioJsColumnDisplayed { get; set; }

        [JsonProperty("lighthouse-core/audits/image-aspect-ratio.js | columnActual", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsImageAspectRatioJsColumnActual { get; set; }

        [JsonProperty("lighthouse-core/audits/image-size-responsive.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsImageSizeResponsiveJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/image-size-responsive.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsImageSizeResponsiveJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/preload-fonts.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsPreloadFontsJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/preload-fonts.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsPreloadFontsJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/deprecations.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsDeprecationsJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/deprecations.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsDeprecationsJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/mainthread-work-breakdown.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsMainthreadWorkBreakdownJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/mainthread-work-breakdown.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsMainthreadWorkBreakdownJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/mainthread-work-breakdown.js | columnCategory", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsMainthreadWorkBreakdownJsColumnCategory { get; set; }

        [JsonProperty("lighthouse-core/audits/bootup-time.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsBootupTimeJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/bootup-time.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsBootupTimeJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/bootup-time.js | columnTotal", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsBootupTimeJsColumnTotal { get; set; }

        [JsonProperty("lighthouse-core/audits/bootup-time.js | columnScriptEval", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsBootupTimeJsColumnScriptEval { get; set; }

        [JsonProperty("lighthouse-core/audits/bootup-time.js | columnScriptParse", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsBootupTimeJsColumnScriptParse { get; set; }

        [JsonProperty("lighthouse-core/audits/uses-rel-preload.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsUsesRelPreloadJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/uses-rel-preload.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsUsesRelPreloadJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/uses-rel-preconnect.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsUsesRelPreconnectJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/uses-rel-preconnect.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsUsesRelPreconnectJsDescription { get; set; }

        [JsonProperty("lighthouse-core/lib/i18n/i18n.js | displayValueMsSavings", NullValueHandling = NullValueHandling.Ignore)]
        public LighthouseCoreLibI18NI18NJsDisplayValueMsSaving[] LighthouseCoreLibI18NI18NJsDisplayValueMsSavings { get; set; }

        [JsonProperty("lighthouse-core/lib/i18n/i18n.js | columnWastedBytes", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreLibI18NI18NJsColumnWastedBytes { get; set; }

        [JsonProperty("lighthouse-core/audits/font-display.js | failureTitle", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsFontDisplayJsFailureTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/font-display.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsFontDisplayJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/network-rtt.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsNetworkRttJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/network-rtt.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsNetworkRttJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/network-server-latency.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsNetworkServerLatencyJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/network-server-latency.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsNetworkServerLatencyJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/performance-budget.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsPerformanceBudgetJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/performance-budget.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsPerformanceBudgetJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/timing-budget.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsTimingBudgetJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/timing-budget.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsTimingBudgetJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/resource-summary.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsResourceSummaryJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/resource-summary.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsResourceSummaryJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/resource-summary.js | displayValue", NullValueHandling = NullValueHandling.Ignore)]
        public LighthouseCoreAuditsResourceSummaryJsDisplayValue[] LighthouseCoreAuditsResourceSummaryJsDisplayValue { get; set; }

        [JsonProperty("lighthouse-core/lib/i18n/i18n.js | columnResourceType", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreLibI18NI18NJsColumnResourceType { get; set; }

        [JsonProperty("lighthouse-core/lib/i18n/i18n.js | columnRequests", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreLibI18NI18NJsColumnRequests { get; set; }

        [JsonProperty("lighthouse-core/lib/i18n/i18n.js | columnTransferSize", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreLibI18NI18NJsColumnTransferSize { get; set; }

        [JsonProperty("lighthouse-core/lib/i18n/i18n.js | totalResourceType", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreLibI18NI18NJsTotalResourceType { get; set; }

        [JsonProperty("lighthouse-core/lib/i18n/i18n.js | imageResourceType", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreLibI18NI18NJsImageResourceType { get; set; }

        [JsonProperty("lighthouse-core/lib/i18n/i18n.js | fontResourceType", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreLibI18NI18NJsFontResourceType { get; set; }

        [JsonProperty("lighthouse-core/lib/i18n/i18n.js | scriptResourceType", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreLibI18NI18NJsScriptResourceType { get; set; }

        [JsonProperty("lighthouse-core/lib/i18n/i18n.js | stylesheetResourceType", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreLibI18NI18NJsStylesheetResourceType { get; set; }

        [JsonProperty("lighthouse-core/lib/i18n/i18n.js | documentResourceType", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreLibI18NI18NJsDocumentResourceType { get; set; }

        [JsonProperty("lighthouse-core/lib/i18n/i18n.js | otherResourceType", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreLibI18NI18NJsOtherResourceType { get; set; }

        [JsonProperty("lighthouse-core/lib/i18n/i18n.js | mediaResourceType", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreLibI18NI18NJsMediaResourceType { get; set; }

        [JsonProperty("lighthouse-core/lib/i18n/i18n.js | thirdPartyResourceType", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreLibI18NI18NJsThirdPartyResourceType { get; set; }

        [JsonProperty("lighthouse-core/audits/third-party-summary.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsThirdPartySummaryJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/third-party-summary.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsThirdPartySummaryJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/third-party-summary.js | displayValue", NullValueHandling = NullValueHandling.Ignore)]
        public LighthouseCore[] LighthouseCoreAuditsThirdPartySummaryJsDisplayValue { get; set; }

        [JsonProperty("lighthouse-core/audits/third-party-summary.js | columnThirdParty", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsThirdPartySummaryJsColumnThirdParty { get; set; }

        [JsonProperty("lighthouse-core/lib/i18n/i18n.js | columnBlockingTime", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreLibI18NI18NJsColumnBlockingTime { get; set; }

        [JsonProperty("lighthouse-core/audits/third-party-facades.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsThirdPartyFacadesJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/third-party-facades.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsThirdPartyFacadesJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/largest-contentful-paint-element.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsLargestContentfulPaintElementJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/largest-contentful-paint-element.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsLargestContentfulPaintElementJsDescription { get; set; }

        [JsonProperty("lighthouse-core/lib/i18n/i18n.js | displayValueElementsFound", NullValueHandling = NullValueHandling.Ignore)]
        public LighthouseCoreLibI18NI18NJsDisplayValueElementsFound[] LighthouseCoreLibI18NI18NJsDisplayValueElementsFound { get; set; }

        [JsonProperty("lighthouse-core/lib/i18n/i18n.js | columnElement", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreLibI18NI18NJsColumnElement { get; set; }

        [JsonProperty("lighthouse-core/audits/lcp-lazy-loaded.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsLcpLazyLoadedJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/lcp-lazy-loaded.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsLcpLazyLoadedJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/layout-shift-elements.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsLayoutShiftElementsJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/layout-shift-elements.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsLayoutShiftElementsJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/layout-shift-elements.js | columnContribution", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsLayoutShiftElementsJsColumnContribution { get; set; }

        [JsonProperty("lighthouse-core/audits/long-tasks.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsLongTasksJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/long-tasks.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsLongTasksJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/long-tasks.js | displayValue", NullValueHandling = NullValueHandling.Ignore)]
        public LighthouseCoreAuditsJsDisplayValue[] LighthouseCoreAuditsLongTasksJsDisplayValue { get; set; }

        [JsonProperty("lighthouse-core/lib/i18n/i18n.js | columnStartTime", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreLibI18NI18NJsColumnStartTime { get; set; }

        [JsonProperty("lighthouse-core/lib/i18n/i18n.js | columnDuration", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreLibI18NI18NJsColumnDuration { get; set; }

        [JsonProperty("lighthouse-core/audits/no-unload-listeners.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsNoUnloadListenersJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/no-unload-listeners.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsNoUnloadListenersJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/non-composited-animations.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsNonCompositedAnimationsJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/non-composited-animations.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsNonCompositedAnimationsJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/unsized-images.js | failureTitle", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsUnsizedImagesJsFailureTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/unsized-images.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsUnsizedImagesJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/valid-source-maps.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsValidSourceMapsJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/valid-source-maps.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsValidSourceMapsJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/preload-lcp-image.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsPreloadLcpImageJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/preload-lcp-image.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsPreloadLcpImageJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/csp-xss.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsCspXssJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/csp-xss.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsCspXssJsDescription { get; set; }

        [JsonProperty("lighthouse-core/lib/i18n/i18n.js | columnDescription", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreLibI18NI18NJsColumnDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/csp-xss.js | columnDirective", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsCspXssJsColumnDirective { get; set; }

        [JsonProperty("lighthouse-core/audits/csp-xss.js | columnSeverity", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsCspXssJsColumnSeverity { get; set; }

        [JsonProperty("lighthouse-core/lib/i18n/i18n.js | itemSeverityHigh", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreLibI18NI18NJsItemSeverityHigh { get; set; }

        [JsonProperty("lighthouse-core/audits/csp-xss.js | noCsp", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsCspXssJsNoCsp { get; set; }

        [JsonProperty("lighthouse-core/audits/manual/pwa-cross-browser.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsManualPwaCrossBrowserJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/manual/pwa-cross-browser.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsManualPwaCrossBrowserJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/manual/pwa-page-transitions.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsManualPwaPageTransitionsJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/manual/pwa-page-transitions.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsManualPwaPageTransitionsJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/manual/pwa-each-page-has-url.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsManualPwaEachPageHasUrlJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/manual/pwa-each-page-has-url.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsManualPwaEachPageHasUrlJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/accesskeys.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityAccesskeysJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/accesskeys.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityAccesskeysJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/aria-allowed-attr.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityAriaAllowedAttrJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/aria-allowed-attr.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityAriaAllowedAttrJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/aria-command-name.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityAriaCommandNameJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/aria-command-name.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityAriaCommandNameJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/aria-hidden-body.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityAriaHiddenBodyJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/aria-hidden-body.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityAriaHiddenBodyJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/aria-hidden-focus.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityAriaHiddenFocusJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/aria-hidden-focus.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityAriaHiddenFocusJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/aria-input-field-name.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityAriaInputFieldNameJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/aria-input-field-name.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityAriaInputFieldNameJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/aria-meter-name.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityAriaMeterNameJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/aria-meter-name.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityAriaMeterNameJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/aria-progressbar-name.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityAriaProgressbarNameJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/aria-progressbar-name.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityAriaProgressbarNameJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/aria-required-attr.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityAriaRequiredAttrJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/aria-required-attr.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityAriaRequiredAttrJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/aria-required-children.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityAriaRequiredChildrenJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/aria-required-children.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityAriaRequiredChildrenJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/aria-required-parent.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityAriaRequiredParentJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/aria-required-parent.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityAriaRequiredParentJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/aria-roles.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityAriaRolesJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/aria-roles.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityAriaRolesJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/aria-toggle-field-name.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityAriaToggleFieldNameJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/aria-toggle-field-name.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityAriaToggleFieldNameJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/aria-tooltip-name.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityAriaTooltipNameJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/aria-tooltip-name.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityAriaTooltipNameJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/aria-treeitem-name.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityAriaTreeitemNameJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/aria-treeitem-name.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityAriaTreeitemNameJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/aria-valid-attr-value.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityAriaValidAttrValueJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/aria-valid-attr-value.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityAriaValidAttrValueJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/aria-valid-attr.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityAriaValidAttrJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/aria-valid-attr.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityAriaValidAttrJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/button-name.js | failureTitle", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityButtonNameJsFailureTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/button-name.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityButtonNameJsDescription { get; set; }

        [JsonProperty("lighthouse-core/lib/i18n/i18n.js | columnFailingElem", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreLibI18NI18NJsColumnFailingElem { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/bypass.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityBypassJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/bypass.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityBypassJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/color-contrast.js | failureTitle", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityColorContrastJsFailureTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/color-contrast.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityColorContrastJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/definition-list.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityDefinitionListJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/definition-list.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityDefinitionListJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/dlitem.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityDlitemJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/dlitem.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityDlitemJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/document-title.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityDocumentTitleJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/document-title.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityDocumentTitleJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/duplicate-id-active.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityDuplicateIdActiveJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/duplicate-id-active.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityDuplicateIdActiveJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/duplicate-id-aria.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityDuplicateIdAriaJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/duplicate-id-aria.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityDuplicateIdAriaJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/form-field-multiple-labels.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityFormFieldMultipleLabelsJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/form-field-multiple-labels.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityFormFieldMultipleLabelsJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/frame-title.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityFrameTitleJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/frame-title.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityFrameTitleJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/heading-order.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityHeadingOrderJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/heading-order.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityHeadingOrderJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/html-has-lang.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityHtmlHasLangJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/html-has-lang.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityHtmlHasLangJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/html-lang-valid.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityHtmlLangValidJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/html-lang-valid.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityHtmlLangValidJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/image-alt.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityImageAltJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/image-alt.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityImageAltJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/input-image-alt.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityInputImageAltJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/input-image-alt.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityInputImageAltJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/label.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityLabelJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/label.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityLabelJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/link-name.js | failureTitle", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityLinkNameJsFailureTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/link-name.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityLinkNameJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/list.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityListJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/list.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityListJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/listitem.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityListitemJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/listitem.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityListitemJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/meta-refresh.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityMetaRefreshJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/meta-refresh.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityMetaRefreshJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/meta-viewport.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityMetaViewportJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/meta-viewport.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityMetaViewportJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/object-alt.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityObjectAltJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/object-alt.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityObjectAltJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/tabindex.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityTabindexJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/tabindex.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityTabindexJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/td-headers-attr.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityTdHeadersAttrJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/td-headers-attr.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityTdHeadersAttrJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/th-has-data-cells.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityThHasDataCellsJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/th-has-data-cells.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityThHasDataCellsJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/valid-lang.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityValidLangJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/valid-lang.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityValidLangJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/video-caption.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityVideoCaptionJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/accessibility/video-caption.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsAccessibilityVideoCaptionJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/byte-efficiency/uses-long-cache-ttl.js | failureTitle", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsByteEfficiencyUsesLongCacheTtlJsFailureTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/byte-efficiency/uses-long-cache-ttl.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsByteEfficiencyUsesLongCacheTtlJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/byte-efficiency/uses-long-cache-ttl.js | displayValue", NullValueHandling = NullValueHandling.Ignore)]
        public LighthouseCoreAuditsJsDisplayValue[] LighthouseCoreAuditsByteEfficiencyUsesLongCacheTtlJsDisplayValue { get; set; }

        [JsonProperty("lighthouse-core/lib/i18n/i18n.js | columnCacheTTL", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreLibI18NI18NJsColumnCacheTtl { get; set; }

        [JsonProperty("lighthouse-core/audits/byte-efficiency/total-byte-weight.js | failureTitle", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsByteEfficiencyTotalByteWeightJsFailureTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/byte-efficiency/total-byte-weight.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsByteEfficiencyTotalByteWeightJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/byte-efficiency/total-byte-weight.js | displayValue", NullValueHandling = NullValueHandling.Ignore)]
        public LighthouseCoreAuditsByteEfficiencyTotalByteWeightJsDisplayValue[] LighthouseCoreAuditsByteEfficiencyTotalByteWeightJsDisplayValue { get; set; }

        [JsonProperty("lighthouse-core/audits/byte-efficiency/offscreen-images.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsByteEfficiencyOffscreenImagesJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/byte-efficiency/offscreen-images.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsByteEfficiencyOffscreenImagesJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/byte-efficiency/render-blocking-resources.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsByteEfficiencyRenderBlockingResourcesJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/byte-efficiency/render-blocking-resources.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsByteEfficiencyRenderBlockingResourcesJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/byte-efficiency/unminified-css.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsByteEfficiencyUnminifiedCssJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/byte-efficiency/unminified-css.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsByteEfficiencyUnminifiedCssJsDescription { get; set; }

        [JsonProperty("lighthouse-core/lib/i18n/i18n.js | displayValueByteSavings", NullValueHandling = NullValueHandling.Ignore)]
        public LighthouseCoreLibI18NI18NJsDisplayValueByteSaving[] LighthouseCoreLibI18NI18NJsDisplayValueByteSavings { get; set; }

        [JsonProperty("lighthouse-core/audits/byte-efficiency/unminified-javascript.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsByteEfficiencyUnminifiedJavascriptJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/byte-efficiency/unminified-javascript.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsByteEfficiencyUnminifiedJavascriptJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/byte-efficiency/unused-css-rules.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsByteEfficiencyUnusedCssRulesJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/byte-efficiency/unused-css-rules.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsByteEfficiencyUnusedCssRulesJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/byte-efficiency/unused-javascript.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsByteEfficiencyUnusedJavascriptJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/byte-efficiency/unused-javascript.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsByteEfficiencyUnusedJavascriptJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/byte-efficiency/modern-image-formats.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsByteEfficiencyModernImageFormatsJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/byte-efficiency/modern-image-formats.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsByteEfficiencyModernImageFormatsJsDescription { get; set; }

        [JsonProperty("lighthouse-core/lib/i18n/i18n.js | columnResourceSize", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreLibI18NI18NJsColumnResourceSize { get; set; }

        [JsonProperty("lighthouse-core/audits/byte-efficiency/uses-optimized-images.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsByteEfficiencyUsesOptimizedImagesJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/byte-efficiency/uses-optimized-images.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsByteEfficiencyUsesOptimizedImagesJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/byte-efficiency/uses-text-compression.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsByteEfficiencyUsesTextCompressionJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/byte-efficiency/uses-text-compression.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsByteEfficiencyUsesTextCompressionJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/byte-efficiency/uses-responsive-images.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsByteEfficiencyUsesResponsiveImagesJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/byte-efficiency/uses-responsive-images.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsByteEfficiencyUsesResponsiveImagesJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/byte-efficiency/efficient-animated-content.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsByteEfficiencyEfficientAnimatedContentJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/byte-efficiency/efficient-animated-content.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsByteEfficiencyEfficientAnimatedContentJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/byte-efficiency/duplicated-javascript.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsByteEfficiencyDuplicatedJavascriptJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/byte-efficiency/duplicated-javascript.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsByteEfficiencyDuplicatedJavascriptJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/byte-efficiency/legacy-javascript.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsByteEfficiencyLegacyJavascriptJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/byte-efficiency/legacy-javascript.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsByteEfficiencyLegacyJavascriptJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/dobetterweb/doctype.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsDobetterwebDoctypeJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/dobetterweb/doctype.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsDobetterwebDoctypeJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/dobetterweb/charset.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsDobetterwebCharsetJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/dobetterweb/charset.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsDobetterwebCharsetJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/dobetterweb/dom-size.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsDobetterwebDomSizeJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/dobetterweb/dom-size.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsDobetterwebDomSizeJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/dobetterweb/dom-size.js | displayValue", NullValueHandling = NullValueHandling.Ignore)]
        public LighthouseCoreAuditsJsDisplayValue[] LighthouseCoreAuditsDobetterwebDomSizeJsDisplayValue { get; set; }

        [JsonProperty("lighthouse-core/audits/dobetterweb/dom-size.js | columnStatistic", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsDobetterwebDomSizeJsColumnStatistic { get; set; }

        [JsonProperty("lighthouse-core/audits/dobetterweb/dom-size.js | columnValue", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsDobetterwebDomSizeJsColumnValue { get; set; }

        [JsonProperty("lighthouse-core/audits/dobetterweb/dom-size.js | statisticDOMElements", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsDobetterwebDomSizeJsStatisticDomElements { get; set; }

        [JsonProperty("lighthouse-core/audits/dobetterweb/dom-size.js | statisticDOMDepth", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsDobetterwebDomSizeJsStatisticDomDepth { get; set; }

        [JsonProperty("lighthouse-core/audits/dobetterweb/dom-size.js | statisticDOMWidth", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsDobetterwebDomSizeJsStatisticDomWidth { get; set; }

        [JsonProperty("lighthouse-core/audits/dobetterweb/geolocation-on-start.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsDobetterwebGeolocationOnStartJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/dobetterweb/geolocation-on-start.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsDobetterwebGeolocationOnStartJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/dobetterweb/inspector-issues.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsDobetterwebInspectorIssuesJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/dobetterweb/inspector-issues.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsDobetterwebInspectorIssuesJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/dobetterweb/no-document-write.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsDobetterwebNoDocumentWriteJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/dobetterweb/no-document-write.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsDobetterwebNoDocumentWriteJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/dobetterweb/no-vulnerable-libraries.js | failureTitle", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsDobetterwebNoVulnerableLibrariesJsFailureTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/dobetterweb/no-vulnerable-libraries.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsDobetterwebNoVulnerableLibrariesJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/dobetterweb/no-vulnerable-libraries.js | displayValue", NullValueHandling = NullValueHandling.Ignore)]
        public LighthouseCoreAuditsJsDisplayValue[] LighthouseCoreAuditsDobetterwebNoVulnerableLibrariesJsDisplayValue { get; set; }

        [JsonProperty("lighthouse-core/audits/dobetterweb/no-vulnerable-libraries.js | columnVersion", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsDobetterwebNoVulnerableLibrariesJsColumnVersion { get; set; }

        [JsonProperty("lighthouse-core/audits/dobetterweb/no-vulnerable-libraries.js | columnVuln", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsDobetterwebNoVulnerableLibrariesJsColumnVuln { get; set; }

        [JsonProperty("lighthouse-core/audits/dobetterweb/no-vulnerable-libraries.js | columnSeverity", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsDobetterwebNoVulnerableLibrariesJsColumnSeverity { get; set; }

        [JsonProperty("lighthouse-core/lib/i18n/i18n.js | itemSeverityMedium", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreLibI18NI18NJsItemSeverityMedium { get; set; }

        [JsonProperty("lighthouse-core/audits/dobetterweb/js-libraries.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsDobetterwebJsLibrariesJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/dobetterweb/js-libraries.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsDobetterwebJsLibrariesJsDescription { get; set; }

        [JsonProperty("lighthouse-core/lib/i18n/i18n.js | columnName", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreLibI18NI18NJsColumnName { get; set; }

        [JsonProperty("lighthouse-core/audits/dobetterweb/js-libraries.js | columnVersion", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsDobetterwebJsLibrariesJsColumnVersion { get; set; }

        [JsonProperty("lighthouse-core/audits/dobetterweb/notification-on-start.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsDobetterwebNotificationOnStartJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/dobetterweb/notification-on-start.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsDobetterwebNotificationOnStartJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/dobetterweb/password-inputs-can-be-pasted-into.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsDobetterwebPasswordInputsCanBePastedIntoJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/dobetterweb/password-inputs-can-be-pasted-into.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsDobetterwebPasswordInputsCanBePastedIntoJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/dobetterweb/uses-http2.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsDobetterwebUsesHttp2JsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/dobetterweb/uses-http2.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsDobetterwebUsesHttp2JsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/dobetterweb/uses-http2.js | displayValue", NullValueHandling = NullValueHandling.Ignore)]
        public LighthouseCoreAuditsJsDisplayValue[] LighthouseCoreAuditsDobetterwebUsesHttp2JsDisplayValue { get; set; }

        [JsonProperty("lighthouse-core/audits/dobetterweb/uses-http2.js | columnProtocol", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsDobetterwebUsesHttp2JsColumnProtocol { get; set; }

        [JsonProperty("lighthouse-core/audits/dobetterweb/uses-passive-event-listeners.js | failureTitle", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsDobetterwebUsesPassiveEventListenersJsFailureTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/dobetterweb/uses-passive-event-listeners.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsDobetterwebUsesPassiveEventListenersJsDescription { get; set; }

        [JsonProperty("lighthouse-core/lib/i18n/i18n.js | columnSource", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreLibI18NI18NJsColumnSource { get; set; }

        [JsonProperty("lighthouse-core/audits/seo/meta-description.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsSeoMetaDescriptionJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/seo/meta-description.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsSeoMetaDescriptionJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/seo/http-status-code.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsSeoHttpStatusCodeJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/seo/http-status-code.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsSeoHttpStatusCodeJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/seo/font-size.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsSeoFontSizeJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/seo/font-size.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsSeoFontSizeJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/seo/font-size.js | displayValue", NullValueHandling = NullValueHandling.Ignore)]
        public LighthouseCoreAuditsSeoJsDisplayValue[] LighthouseCoreAuditsSeoFontSizeJsDisplayValue { get; set; }

        [JsonProperty("lighthouse-core/audits/seo/font-size.js | columnSelector", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsSeoFontSizeJsColumnSelector { get; set; }

        [JsonProperty("lighthouse-core/audits/seo/font-size.js | columnPercentPageText", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsSeoFontSizeJsColumnPercentPageText { get; set; }

        [JsonProperty("lighthouse-core/audits/seo/font-size.js | columnFontSize", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsSeoFontSizeJsColumnFontSize { get; set; }

        [JsonProperty("lighthouse-core/audits/seo/font-size.js | legibleText", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsSeoFontSizeJsLegibleText { get; set; }

        [JsonProperty("lighthouse-core/audits/seo/link-text.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsSeoLinkTextJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/seo/link-text.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsSeoLinkTextJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/seo/crawlable-anchors.js | failureTitle", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsSeoCrawlableAnchorsJsFailureTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/seo/crawlable-anchors.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsSeoCrawlableAnchorsJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/seo/crawlable-anchors.js | columnFailingLink", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsSeoCrawlableAnchorsJsColumnFailingLink { get; set; }

        [JsonProperty("lighthouse-core/audits/seo/is-crawlable.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsSeoIsCrawlableJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/seo/is-crawlable.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsSeoIsCrawlableJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/seo/robots-txt.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsSeoRobotsTxtJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/seo/robots-txt.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsSeoRobotsTxtJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/seo/tap-targets.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsSeoTapTargetsJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/seo/tap-targets.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsSeoTapTargetsJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/seo/tap-targets.js | displayValue", NullValueHandling = NullValueHandling.Ignore)]
        public LighthouseCoreAuditsSeoJsDisplayValue[] LighthouseCoreAuditsSeoTapTargetsJsDisplayValue { get; set; }

        [JsonProperty("lighthouse-core/audits/seo/hreflang.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsSeoHreflangJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/seo/hreflang.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsSeoHreflangJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/seo/plugins.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsSeoPluginsJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/seo/plugins.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsSeoPluginsJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/seo/canonical.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsSeoCanonicalJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/seo/canonical.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsSeoCanonicalJsDescription { get; set; }

        [JsonProperty("lighthouse-core/audits/seo/manual/structured-data.js | title", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsSeoManualStructuredDataJsTitle { get; set; }

        [JsonProperty("lighthouse-core/audits/seo/manual/structured-data.js | description", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreAuditsSeoManualStructuredDataJsDescription { get; set; }

        [JsonProperty("lighthouse-core/config/default-config.js | performanceCategoryTitle", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreConfigDefaultConfigJsPerformanceCategoryTitle { get; set; }

        [JsonProperty("lighthouse-core/config/default-config.js | a11yCategoryTitle", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreConfigDefaultConfigJsA11YCategoryTitle { get; set; }

        [JsonProperty("lighthouse-core/config/default-config.js | a11yCategoryDescription", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreConfigDefaultConfigJsA11YCategoryDescription { get; set; }

        [JsonProperty("lighthouse-core/config/default-config.js | a11yCategoryManualDescription", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreConfigDefaultConfigJsA11YCategoryManualDescription { get; set; }

        [JsonProperty("lighthouse-core/config/default-config.js | bestPracticesCategoryTitle", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreConfigDefaultConfigJsBestPracticesCategoryTitle { get; set; }

        [JsonProperty("lighthouse-core/config/default-config.js | seoCategoryTitle", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreConfigDefaultConfigJsSeoCategoryTitle { get; set; }

        [JsonProperty("lighthouse-core/config/default-config.js | seoCategoryDescription", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreConfigDefaultConfigJsSeoCategoryDescription { get; set; }

        [JsonProperty("lighthouse-core/config/default-config.js | seoCategoryManualDescription", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreConfigDefaultConfigJsSeoCategoryManualDescription { get; set; }

        [JsonProperty("lighthouse-core/config/default-config.js | pwaCategoryTitle", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreConfigDefaultConfigJsPwaCategoryTitle { get; set; }

        [JsonProperty("lighthouse-core/config/default-config.js | pwaCategoryDescription", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreConfigDefaultConfigJsPwaCategoryDescription { get; set; }

        [JsonProperty("lighthouse-core/config/default-config.js | pwaCategoryManualDescription", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreConfigDefaultConfigJsPwaCategoryManualDescription { get; set; }

        [JsonProperty("lighthouse-core/config/default-config.js | metricGroupTitle", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreConfigDefaultConfigJsMetricGroupTitle { get; set; }

        [JsonProperty("lighthouse-core/config/default-config.js | loadOpportunitiesGroupTitle", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreConfigDefaultConfigJsLoadOpportunitiesGroupTitle { get; set; }

        [JsonProperty("lighthouse-core/config/default-config.js | loadOpportunitiesGroupDescription", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreConfigDefaultConfigJsLoadOpportunitiesGroupDescription { get; set; }

        [JsonProperty("lighthouse-core/config/default-config.js | budgetsGroupTitle", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreConfigDefaultConfigJsBudgetsGroupTitle { get; set; }

        [JsonProperty("lighthouse-core/config/default-config.js | budgetsGroupDescription", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreConfigDefaultConfigJsBudgetsGroupDescription { get; set; }

        [JsonProperty("lighthouse-core/config/default-config.js | diagnosticsGroupTitle", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreConfigDefaultConfigJsDiagnosticsGroupTitle { get; set; }

        [JsonProperty("lighthouse-core/config/default-config.js | diagnosticsGroupDescription", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreConfigDefaultConfigJsDiagnosticsGroupDescription { get; set; }

        [JsonProperty("lighthouse-core/config/default-config.js | pwaInstallableGroupTitle", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreConfigDefaultConfigJsPwaInstallableGroupTitle { get; set; }

        [JsonProperty("lighthouse-core/config/default-config.js | pwaOptimizedGroupTitle", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreConfigDefaultConfigJsPwaOptimizedGroupTitle { get; set; }

        [JsonProperty("lighthouse-core/config/default-config.js | a11yBestPracticesGroupTitle", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreConfigDefaultConfigJsA11YBestPracticesGroupTitle { get; set; }

        [JsonProperty("lighthouse-core/config/default-config.js | a11yBestPracticesGroupDescription", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreConfigDefaultConfigJsA11YBestPracticesGroupDescription { get; set; }

        [JsonProperty("lighthouse-core/config/default-config.js | a11yColorContrastGroupTitle", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreConfigDefaultConfigJsA11YColorContrastGroupTitle { get; set; }

        [JsonProperty("lighthouse-core/config/default-config.js | a11yColorContrastGroupDescription", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreConfigDefaultConfigJsA11YColorContrastGroupDescription { get; set; }

        [JsonProperty("lighthouse-core/config/default-config.js | a11yNamesLabelsGroupTitle", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreConfigDefaultConfigJsA11YNamesLabelsGroupTitle { get; set; }

        [JsonProperty("lighthouse-core/config/default-config.js | a11yNamesLabelsGroupDescription", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreConfigDefaultConfigJsA11YNamesLabelsGroupDescription { get; set; }

        [JsonProperty("lighthouse-core/config/default-config.js | a11yNavigationGroupTitle", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreConfigDefaultConfigJsA11YNavigationGroupTitle { get; set; }

        [JsonProperty("lighthouse-core/config/default-config.js | a11yNavigationGroupDescription", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreConfigDefaultConfigJsA11YNavigationGroupDescription { get; set; }

        [JsonProperty("lighthouse-core/config/default-config.js | a11yAriaGroupTitle", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreConfigDefaultConfigJsA11YAriaGroupTitle { get; set; }

        [JsonProperty("lighthouse-core/config/default-config.js | a11yAriaGroupDescription", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreConfigDefaultConfigJsA11YAriaGroupDescription { get; set; }

        [JsonProperty("lighthouse-core/config/default-config.js | a11yLanguageGroupTitle", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreConfigDefaultConfigJsA11YLanguageGroupTitle { get; set; }

        [JsonProperty("lighthouse-core/config/default-config.js | a11yLanguageGroupDescription", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreConfigDefaultConfigJsA11YLanguageGroupDescription { get; set; }

        [JsonProperty("lighthouse-core/config/default-config.js | a11yAudioVideoGroupTitle", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreConfigDefaultConfigJsA11YAudioVideoGroupTitle { get; set; }

        [JsonProperty("lighthouse-core/config/default-config.js | a11yAudioVideoGroupDescription", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreConfigDefaultConfigJsA11YAudioVideoGroupDescription { get; set; }

        [JsonProperty("lighthouse-core/config/default-config.js | a11yTablesListsVideoGroupTitle", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreConfigDefaultConfigJsA11YTablesListsVideoGroupTitle { get; set; }

        [JsonProperty("lighthouse-core/config/default-config.js | a11yTablesListsVideoGroupDescription", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreConfigDefaultConfigJsA11YTablesListsVideoGroupDescription { get; set; }

        [JsonProperty("lighthouse-core/config/default-config.js | seoMobileGroupTitle", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreConfigDefaultConfigJsSeoMobileGroupTitle { get; set; }

        [JsonProperty("lighthouse-core/config/default-config.js | seoMobileGroupDescription", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreConfigDefaultConfigJsSeoMobileGroupDescription { get; set; }

        [JsonProperty("lighthouse-core/config/default-config.js | seoContentGroupTitle", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreConfigDefaultConfigJsSeoContentGroupTitle { get; set; }

        [JsonProperty("lighthouse-core/config/default-config.js | seoContentGroupDescription", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreConfigDefaultConfigJsSeoContentGroupDescription { get; set; }

        [JsonProperty("lighthouse-core/config/default-config.js | seoCrawlingGroupTitle", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreConfigDefaultConfigJsSeoCrawlingGroupTitle { get; set; }

        [JsonProperty("lighthouse-core/config/default-config.js | seoCrawlingGroupDescription", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreConfigDefaultConfigJsSeoCrawlingGroupDescription { get; set; }

        [JsonProperty("lighthouse-core/config/default-config.js | bestPracticesTrustSafetyGroupTitle", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreConfigDefaultConfigJsBestPracticesTrustSafetyGroupTitle { get; set; }

        [JsonProperty("lighthouse-core/config/default-config.js | bestPracticesUXGroupTitle", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreConfigDefaultConfigJsBestPracticesUxGroupTitle { get; set; }

        [JsonProperty("lighthouse-core/config/default-config.js | bestPracticesBrowserCompatGroupTitle", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreConfigDefaultConfigJsBestPracticesBrowserCompatGroupTitle { get; set; }

        [JsonProperty("lighthouse-core/config/default-config.js | bestPracticesGeneralGroupTitle", NullValueHandling = NullValueHandling.Ignore)]
        public string[] LighthouseCoreConfigDefaultConfigJsBestPracticesGeneralGroupTitle { get; set; }
    }

    public partial class LighthouseCoreAuditsByteEfficiencyTotalByteWeightJsDisplayValue
    {
        [JsonProperty("values", NullValueHandling = NullValueHandling.Ignore)]
        public LighthouseCoreAuditsByteEfficiencyTotalByteWeightJsDisplayValueValues Values { get; set; }

        [JsonProperty("path", NullValueHandling = NullValueHandling.Ignore)]
        public string Path { get; set; }
    }

    public partial class LighthouseCoreAuditsByteEfficiencyTotalByteWeightJsDisplayValueValues
    {
        [JsonProperty("totalBytes", NullValueHandling = NullValueHandling.Ignore)]
        public long? TotalBytes { get; set; }
    }

    public partial class LighthouseCoreAuditsJsDisplayValue
    {
        [JsonProperty("values", NullValueHandling = NullValueHandling.Ignore)]
        public LighthouseCoreAuditsByteEfficiencyUsesLongCacheTtlJsDisplayValueValues Values { get; set; }

        [JsonProperty("path", NullValueHandling = NullValueHandling.Ignore)]
        public string Path { get; set; }
    }

    public partial class LighthouseCoreAuditsByteEfficiencyUsesLongCacheTtlJsDisplayValueValues
    {
        [JsonProperty("itemCount", NullValueHandling = NullValueHandling.Ignore)]
        public long? ItemCount { get; set; }
    }

    public partial class LighthouseCoreAuditsResourceSummaryJsDisplayValue
    {
        [JsonProperty("values", NullValueHandling = NullValueHandling.Ignore)]
        public LighthouseCoreAuditsResourceSummaryJsDisplayValueValues Values { get; set; }

        [JsonProperty("path", NullValueHandling = NullValueHandling.Ignore)]
        public string Path { get; set; }
    }

    public partial class LighthouseCoreAuditsResourceSummaryJsDisplayValueValues
    {
        [JsonProperty("requestCount", NullValueHandling = NullValueHandling.Ignore)]
        public long? RequestCount { get; set; }

        [JsonProperty("byteCount", NullValueHandling = NullValueHandling.Ignore)]
        public long? ByteCount { get; set; }
    }

    public partial class LighthouseCoreAuditsSeoJsDisplayValue
    {
        [JsonProperty("values", NullValueHandling = NullValueHandling.Ignore)]
        public LighthouseCoreAuditsSeoFontSizeJsDisplayValueValues Values { get; set; }

        [JsonProperty("path", NullValueHandling = NullValueHandling.Ignore)]
        public string Path { get; set; }
    }

    public partial class LighthouseCoreAuditsSeoFontSizeJsDisplayValueValues
    {
        [JsonProperty("decimalProportion", NullValueHandling = NullValueHandling.Ignore)]
        public double? DecimalProportion { get; set; }
    }

    public partial class LighthouseCore
    {
        [JsonProperty("values", NullValueHandling = NullValueHandling.Ignore)]
        public LighthouseCoreAuditsServerResponseTimeJsDisplayValueValues Values { get; set; }

        [JsonProperty("path", NullValueHandling = NullValueHandling.Ignore)]
        public string Path { get; set; }
    }

    public partial class LighthouseCoreAuditsServerResponseTimeJsDisplayValueValues
    {
        [JsonProperty("timeInMs", NullValueHandling = NullValueHandling.Ignore)]
        public double? TimeInMs { get; set; }
    }

    public partial class LighthouseCoreLibI18NI18NJsDisplayValueByteSaving
    {
        [JsonProperty("values", NullValueHandling = NullValueHandling.Ignore)]
        public ValuesClass Values { get; set; }

        [JsonProperty("path", NullValueHandling = NullValueHandling.Ignore)]
        public string Path { get; set; }
    }

    public partial class LighthouseCoreLibI18NI18NJsDisplayValueElementsFound
    {
        [JsonProperty("values", NullValueHandling = NullValueHandling.Ignore)]
        public LighthouseCoreLibI18NI18NJsDisplayValueElementsFoundValues Values { get; set; }

        [JsonProperty("path", NullValueHandling = NullValueHandling.Ignore)]
        public string Path { get; set; }
    }

    public partial class LighthouseCoreLibI18NI18NJsDisplayValueElementsFoundValues
    {
        [JsonProperty("nodeCount", NullValueHandling = NullValueHandling.Ignore)]
        public long? NodeCount { get; set; }
    }

    public partial class LighthouseCoreLibI18NI18NJsDisplayValueMsSaving
    {
        [JsonProperty("values", NullValueHandling = NullValueHandling.Ignore)]
        public LighthouseCoreLibI18NI18NJsDisplayValueMsSavingValues Values { get; set; }

        [JsonProperty("path", NullValueHandling = NullValueHandling.Ignore)]
        public string Path { get; set; }
    }

    public partial class LighthouseCoreLibI18NI18NJsDisplayValueMsSavingValues
    {
        [JsonProperty("wastedMs", NullValueHandling = NullValueHandling.Ignore)]
        public double? WastedMs { get; set; }
    }

    public partial class Timing
    {
        [JsonProperty("entries", NullValueHandling = NullValueHandling.Ignore)]
        public Entry[] Entries { get; set; }

        [JsonProperty("total", NullValueHandling = NullValueHandling.Ignore)]
        public double? Total { get; set; }
    }

    public partial class Entry
    {
        [JsonProperty("startTime", NullValueHandling = NullValueHandling.Ignore)]
        public double? StartTime { get; set; }

        [JsonProperty("name", NullValueHandling = NullValueHandling.Ignore)]
        public string Name { get; set; }

        [JsonProperty("duration", NullValueHandling = NullValueHandling.Ignore)]
        public double? Duration { get; set; }

        [JsonProperty("entryType", NullValueHandling = NullValueHandling.Ignore)]
        public EntryType? EntryType { get; set; }
    }

    public enum TypeEnum { Criticalrequestchain, Debugdata, Filmstrip, FullPageScreenshot, Opportunity, Screenshot, Table, TreemapData };

    public enum ScoreDisplayMode { Bytes, Code, Link, Ms, Node, Numeric, SourceLocation, Text, TimespanMs, Url };

    public enum Protocol { H2, Http11 };

    public enum NumericUnit { Byte, Element, Millisecond };

    public enum AccesskeysScoreDisplayMode { Binary, Informative, Manual, NotApplicable, Numeric };

    public enum Resolution { Allowed };

    public enum Group { Budgets, Hidden, Metrics };

    public enum EntryType { Measure };

    public partial struct WastedBytes
    {
        public double? Double;
        public long? Integer;

        public static implicit operator WastedBytes(double Double) => new WastedBytes { Double = Double };
        public static implicit operator WastedBytes(long Integer) => new WastedBytes { Integer = Integer };
    }

    public partial struct Nodes
    {
        public NodeElement[] NodeElementArray;
        public Dictionary<string, NodeValue> NodeValueMap;

        public static implicit operator Nodes(NodeElement[] NodeElementArray) => new Nodes { NodeElementArray = NodeElementArray };
        public static implicit operator Nodes(Dictionary<string, NodeValue> NodeValueMap) => new Nodes { NodeValueMap = NodeValueMap };
    }

    public partial class LighthouseReport
    {
        public static LighthouseReport FromJson(string json) => JsonConvert.DeserializeObject<LighthouseReport>(json, LeadVenture.SharedServices.Lighthouse.Contracts.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this LighthouseReport self) => JsonConvert.SerializeObject(self, LeadVenture.SharedServices.Lighthouse.Contracts.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                TypeEnumConverter.Singleton,
                WastedBytesConverter.Singleton,
                ScoreDisplayModeConverter.Singleton,
                ProtocolConverter.Singleton,
                NodesConverter.Singleton,
                NumericUnitConverter.Singleton,
                AccesskeysScoreDisplayModeConverter.Singleton,
                ResolutionConverter.Singleton,
                GroupConverter.Singleton,
                EntryTypeConverter.Singleton,
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }

    internal class TypeEnumConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(TypeEnum) || t == typeof(TypeEnum?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if (reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            switch (value)
            {
                case "criticalrequestchain":
                    return TypeEnum.Criticalrequestchain;
                case "debugdata":
                    return TypeEnum.Debugdata;
                case "filmstrip":
                    return TypeEnum.Filmstrip;
                case "full-page-screenshot":
                    return TypeEnum.FullPageScreenshot;
                case "opportunity":
                    return TypeEnum.Opportunity;
                case "screenshot":
                    return TypeEnum.Screenshot;
                case "table":
                    return TypeEnum.Table;
                case "treemap-data":
                    return TypeEnum.TreemapData;
            }
            throw new Exception("Cannot unmarshal type TypeEnum");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if (untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (TypeEnum)untypedValue;
            switch (value)
            {
                case TypeEnum.Criticalrequestchain:
                    serializer.Serialize(writer, "criticalrequestchain");
                    return;
                case TypeEnum.Debugdata:
                    serializer.Serialize(writer, "debugdata");
                    return;
                case TypeEnum.Filmstrip:
                    serializer.Serialize(writer, "filmstrip");
                    return;
                case TypeEnum.FullPageScreenshot:
                    serializer.Serialize(writer, "full-page-screenshot");
                    return;
                case TypeEnum.Opportunity:
                    serializer.Serialize(writer, "opportunity");
                    return;
                case TypeEnum.Screenshot:
                    serializer.Serialize(writer, "screenshot");
                    return;
                case TypeEnum.Table:
                    serializer.Serialize(writer, "table");
                    return;
                case TypeEnum.TreemapData:
                    serializer.Serialize(writer, "treemap-data");
                    return;
            }
            throw new Exception("Cannot marshal type TypeEnum");
        }

        public static readonly TypeEnumConverter Singleton = new TypeEnumConverter();
    }

    internal class WastedBytesConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(WastedBytes) || t == typeof(WastedBytes?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            switch (reader.TokenType)
            {
                case JsonToken.Integer:
                    var integerValue = serializer.Deserialize<long>(reader);
                    return new WastedBytes { Integer = integerValue };
                case JsonToken.Float:
                    var doubleValue = serializer.Deserialize<double>(reader);
                    return new WastedBytes { Double = doubleValue };
            }
            throw new Exception("Cannot unmarshal type WastedBytes");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            var value = (WastedBytes)untypedValue;
            if (value.Integer != null)
            {
                serializer.Serialize(writer, value.Integer.Value);
                return;
            }
            if (value.Double != null)
            {
                serializer.Serialize(writer, value.Double.Value);
                return;
            }
            throw new Exception("Cannot marshal type WastedBytes");
        }

        public static readonly WastedBytesConverter Singleton = new WastedBytesConverter();
    }

    internal class ScoreDisplayModeConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(ScoreDisplayMode) || t == typeof(ScoreDisplayMode?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if (reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            switch (value)
            {
                case "bytes":
                    return ScoreDisplayMode.Bytes;
                case "code":
                    return ScoreDisplayMode.Code;
                case "link":
                    return ScoreDisplayMode.Link;
                case "ms":
                    return ScoreDisplayMode.Ms;
                case "node":
                    return ScoreDisplayMode.Node;
                case "numeric":
                    return ScoreDisplayMode.Numeric;
                case "source-location":
                    return ScoreDisplayMode.SourceLocation;
                case "text":
                    return ScoreDisplayMode.Text;
                case "timespanMs":
                    return ScoreDisplayMode.TimespanMs;
                case "url":
                    return ScoreDisplayMode.Url;
            }
            throw new Exception("Cannot unmarshal type ScoreDisplayMode");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if (untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (ScoreDisplayMode)untypedValue;
            switch (value)
            {
                case ScoreDisplayMode.Bytes:
                    serializer.Serialize(writer, "bytes");
                    return;
                case ScoreDisplayMode.Code:
                    serializer.Serialize(writer, "code");
                    return;
                case ScoreDisplayMode.Link:
                    serializer.Serialize(writer, "link");
                    return;
                case ScoreDisplayMode.Ms:
                    serializer.Serialize(writer, "ms");
                    return;
                case ScoreDisplayMode.Node:
                    serializer.Serialize(writer, "node");
                    return;
                case ScoreDisplayMode.Numeric:
                    serializer.Serialize(writer, "numeric");
                    return;
                case ScoreDisplayMode.SourceLocation:
                    serializer.Serialize(writer, "source-location");
                    return;
                case ScoreDisplayMode.Text:
                    serializer.Serialize(writer, "text");
                    return;
                case ScoreDisplayMode.TimespanMs:
                    serializer.Serialize(writer, "timespanMs");
                    return;
                case ScoreDisplayMode.Url:
                    serializer.Serialize(writer, "url");
                    return;
            }
            throw new Exception("Cannot marshal type ScoreDisplayMode");
        }

        public static readonly ScoreDisplayModeConverter Singleton = new ScoreDisplayModeConverter();
    }

    internal class ProtocolConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(Protocol) || t == typeof(Protocol?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if (reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            switch (value)
            {
                case "h2":
                    return Protocol.H2;
                case "http/1.1":
                    return Protocol.Http11;
            }
            throw new Exception("Cannot unmarshal type Protocol");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if (untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (Protocol)untypedValue;
            switch (value)
            {
                case Protocol.H2:
                    serializer.Serialize(writer, "h2");
                    return;
                case Protocol.Http11:
                    serializer.Serialize(writer, "http/1.1");
                    return;
            }
            throw new Exception("Cannot marshal type Protocol");
        }

        public static readonly ProtocolConverter Singleton = new ProtocolConverter();
    }

    internal class NodesConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(Nodes) || t == typeof(Nodes?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            switch (reader.TokenType)
            {
                case JsonToken.StartObject:
                    var objectValue = serializer.Deserialize<Dictionary<string, NodeValue>>(reader);
                    return new Nodes { NodeValueMap = objectValue };
                case JsonToken.StartArray:
                    var arrayValue = serializer.Deserialize<NodeElement[]>(reader);
                    return new Nodes { NodeElementArray = arrayValue };
            }
            throw new Exception("Cannot unmarshal type Nodes");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            var value = (Nodes)untypedValue;
            if (value.NodeElementArray != null)
            {
                serializer.Serialize(writer, value.NodeElementArray);
                return;
            }
            if (value.NodeValueMap != null)
            {
                serializer.Serialize(writer, value.NodeValueMap);
                return;
            }
            throw new Exception("Cannot marshal type Nodes");
        }

        public static readonly NodesConverter Singleton = new NodesConverter();
    }

    internal class NumericUnitConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(NumericUnit) || t == typeof(NumericUnit?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if (reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            switch (value)
            {
                case "byte":
                    return NumericUnit.Byte;
                case "element":
                    return NumericUnit.Element;
                case "millisecond":
                    return NumericUnit.Millisecond;
            }
            throw new Exception("Cannot unmarshal type NumericUnit");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if (untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (NumericUnit)untypedValue;
            switch (value)
            {
                case NumericUnit.Byte:
                    serializer.Serialize(writer, "byte");
                    return;
                case NumericUnit.Element:
                    serializer.Serialize(writer, "element");
                    return;
                case NumericUnit.Millisecond:
                    serializer.Serialize(writer, "millisecond");
                    return;
            }
            throw new Exception("Cannot marshal type NumericUnit");
        }

        public static readonly NumericUnitConverter Singleton = new NumericUnitConverter();
    }

    internal class AccesskeysScoreDisplayModeConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(AccesskeysScoreDisplayMode) || t == typeof(AccesskeysScoreDisplayMode?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if (reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            switch (value)
            {
                case "binary":
                    return AccesskeysScoreDisplayMode.Binary;
                case "informative":
                    return AccesskeysScoreDisplayMode.Informative;
                case "manual":
                    return AccesskeysScoreDisplayMode.Manual;
                case "notApplicable":
                    return AccesskeysScoreDisplayMode.NotApplicable;
                case "numeric":
                    return AccesskeysScoreDisplayMode.Numeric;
            }
            throw new Exception("Cannot unmarshal type AccesskeysScoreDisplayMode");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if (untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (AccesskeysScoreDisplayMode)untypedValue;
            switch (value)
            {
                case AccesskeysScoreDisplayMode.Binary:
                    serializer.Serialize(writer, "binary");
                    return;
                case AccesskeysScoreDisplayMode.Informative:
                    serializer.Serialize(writer, "informative");
                    return;
                case AccesskeysScoreDisplayMode.Manual:
                    serializer.Serialize(writer, "manual");
                    return;
                case AccesskeysScoreDisplayMode.NotApplicable:
                    serializer.Serialize(writer, "notApplicable");
                    return;
                case AccesskeysScoreDisplayMode.Numeric:
                    serializer.Serialize(writer, "numeric");
                    return;
            }
            throw new Exception("Cannot marshal type AccesskeysScoreDisplayMode");
        }

        public static readonly AccesskeysScoreDisplayModeConverter Singleton = new AccesskeysScoreDisplayModeConverter();
    }

    internal class ResolutionConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(Resolution) || t == typeof(Resolution?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if (reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            if (value == "Allowed")
            {
                return Resolution.Allowed;
            }
            throw new Exception("Cannot unmarshal type Resolution");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if (untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (Resolution)untypedValue;
            if (value == Resolution.Allowed)
            {
                serializer.Serialize(writer, "Allowed");
                return;
            }
            throw new Exception("Cannot marshal type Resolution");
        }

        public static readonly ResolutionConverter Singleton = new ResolutionConverter();
    }

    internal class GroupConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(Group) || t == typeof(Group?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if (reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            switch (value)
            {
                case "budgets":
                    return Group.Budgets;
                case "hidden":
                    return Group.Hidden;
                case "metrics":
                    return Group.Metrics;
            }
            throw new Exception("Cannot unmarshal type Group");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if (untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (Group)untypedValue;
            switch (value)
            {
                case Group.Budgets:
                    serializer.Serialize(writer, "budgets");
                    return;
                case Group.Hidden:
                    serializer.Serialize(writer, "hidden");
                    return;
                case Group.Metrics:
                    serializer.Serialize(writer, "metrics");
                    return;
            }
            throw new Exception("Cannot marshal type Group");
        }

        public static readonly GroupConverter Singleton = new GroupConverter();
    }

    internal class EntryTypeConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(EntryType) || t == typeof(EntryType?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if (reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            if (value == "measure")
            {
                return EntryType.Measure;
            }
            throw new Exception("Cannot unmarshal type EntryType");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if (untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (EntryType)untypedValue;
            if (value == EntryType.Measure)
            {
                serializer.Serialize(writer, "measure");
                return;
            }
            throw new Exception("Cannot marshal type EntryType");
        }

        public static readonly EntryTypeConverter Singleton = new EntryTypeConverter();
    }
}
